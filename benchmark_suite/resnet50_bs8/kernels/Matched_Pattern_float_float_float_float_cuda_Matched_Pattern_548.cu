#include "shared.h"
// Node name:	Matched_Pattern_548
// Description:	Matched_Pattern
// Input:
//	- name: Pad_190_0	type: float	shape: Shape{8, 256, 30, 30}
//	- name: Constant_451_0	type: float	shape: Shape{256, 256, 3, 3}
//	- name: Broadcast_452_0	type: float	shape: Shape{8, 256, 14, 14}
// Output:
//	- name: Relu_194_0	type: float	shape: Shape{8, 256, 14, 14}
extern "C" __global__  void Matched_Pattern_float_float_float_float_cuda_Matched_Pattern_548(float* input0, float* input1, float* input2, float* output0)
{
    __shared__ float pad_temp_shared[400];
    __shared__ float input1_shared[1152];
    {
        float* compute = output0;
        {
          float conv2d_nchw[16];
          
          
          conv2d_nchw[0] = 0.000000e+00f;
          conv2d_nchw[4] = 0.000000e+00f;
          conv2d_nchw[8] = 0.000000e+00f;
          conv2d_nchw[12] = 0.000000e+00f;
          conv2d_nchw[1] = 0.000000e+00f;
          conv2d_nchw[5] = 0.000000e+00f;
          conv2d_nchw[9] = 0.000000e+00f;
          conv2d_nchw[13] = 0.000000e+00f;
          conv2d_nchw[2] = 0.000000e+00f;
          conv2d_nchw[6] = 0.000000e+00f;
          conv2d_nchw[10] = 0.000000e+00f;
          conv2d_nchw[14] = 0.000000e+00f;
          conv2d_nchw[3] = 0.000000e+00f;
          conv2d_nchw[7] = 0.000000e+00f;
          conv2d_nchw[11] = 0.000000e+00f;
          conv2d_nchw[15] = 0.000000e+00f;
          for (int rc_outer_outer = 0; rc_outer_outer < 128; ++rc_outer_outer) {
            __syncthreads();
            pad_temp_shared[((int)threadIdx.x)] = input0[((((((((((int)threadIdx.x) / 50) * 230400) + (rc_outer_outer * 1800)) + (((((int)threadIdx.x) % 50) / 25) * 900)) + (((((int)blockIdx.x) % 49) / 7) * 120)) + (((((int)threadIdx.x) % 25) / 5) * 30)) + ((((int)blockIdx.x) % 7) * 4)) + (((int)threadIdx.x) % 5))];
            pad_temp_shared[(((int)threadIdx.x) + 128)] = input0[(((((((((((int)threadIdx.x) + 128) / 50) * 230400) + (rc_outer_outer * 1800)) + ((((((int)threadIdx.x) + 28) % 50) / 25) * 900)) + (((((int)blockIdx.x) % 49) / 7) * 120)) + ((((((int)threadIdx.x) + 3) % 25) / 5) * 30)) + ((((int)blockIdx.x) % 7) * 4)) + ((((int)threadIdx.x) + 3) % 5))];
            pad_temp_shared[(((int)threadIdx.x) + 256)] = input0[(((((((((((int)threadIdx.x) + 256) / 50) * 230400) + (rc_outer_outer * 1800)) + ((((((int)threadIdx.x) + 6) % 50) / 25) * 900)) + (((((int)blockIdx.x) % 49) / 7) * 120)) + ((((((int)threadIdx.x) + 6) % 25) / 5) * 30)) + ((((int)blockIdx.x) % 7) * 4)) + ((((int)threadIdx.x) + 1) % 5))];
            if (((int)threadIdx.x) < 16) {
              pad_temp_shared[(((int)threadIdx.x) + 384)] = input0[(((((((((((int)threadIdx.x) + 384) / 50) * 230400) + (rc_outer_outer * 1800)) + (((((int)threadIdx.x) + 34) / 25) * 900)) + (((((int)blockIdx.x) % 49) / 7) * 120)) + (((((int)threadIdx.x) + 9) / 5) * 30)) + ((((int)blockIdx.x) % 7) * 4)) + ((((int)threadIdx.x) + 4) % 5))];
            }
            input1_shared[((int)threadIdx.x)] = input1[(((((((int)blockIdx.x) / 49) * 147456) + ((((int)threadIdx.x) / 18) * 2304)) + (rc_outer_outer * 18)) + (((int)threadIdx.x) % 18))];
            input1_shared[(((int)threadIdx.x) + 128)] = input1[(((((((int)blockIdx.x) / 49) * 147456) + (((((int)threadIdx.x) + 128) / 18) * 2304)) + (rc_outer_outer * 18)) + ((((int)threadIdx.x) + 2) % 18))];
            input1_shared[(((int)threadIdx.x) + 256)] = input1[(((((((int)blockIdx.x) / 49) * 147456) + (((((int)threadIdx.x) + 256) / 18) * 2304)) + (rc_outer_outer * 18)) + ((((int)threadIdx.x) + 4) % 18))];
            input1_shared[(((int)threadIdx.x) + 384)] = input1[(((((((int)blockIdx.x) / 49) * 147456) + (((((int)threadIdx.x) + 384) / 18) * 2304)) + (rc_outer_outer * 18)) + ((((int)threadIdx.x) + 6) % 18))];
            input1_shared[(((int)threadIdx.x) + 512)] = input1[(((((((int)blockIdx.x) / 49) * 147456) + (((((int)threadIdx.x) + 512) / 18) * 2304)) + (rc_outer_outer * 18)) + ((((int)threadIdx.x) + 8) % 18))];
            input1_shared[(((int)threadIdx.x) + 640)] = input1[(((((((int)blockIdx.x) / 49) * 147456) + (((((int)threadIdx.x) + 640) / 18) * 2304)) + (rc_outer_outer * 18)) + ((((int)threadIdx.x) + 10) % 18))];
            input1_shared[(((int)threadIdx.x) + 768)] = input1[(((((((int)blockIdx.x) / 49) * 147456) + (((((int)threadIdx.x) + 768) / 18) * 2304)) + (rc_outer_outer * 18)) + ((((int)threadIdx.x) + 12) % 18))];
            input1_shared[(((int)threadIdx.x) + 896)] = input1[(((((((int)blockIdx.x) / 49) * 147456) + (((((int)threadIdx.x) + 896) / 18) * 2304)) + (rc_outer_outer * 18)) + ((((int)threadIdx.x) + 14) % 18))];
            input1_shared[(((int)threadIdx.x) + 1024)] = input1[(((((((int)blockIdx.x) / 49) * 147456) + (((((int)threadIdx.x) + 1024) / 18) * 2304)) + (rc_outer_outer * 18)) + ((((int)threadIdx.x) + 16) % 18))];
            __syncthreads();
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) >> 5) * 100)] * input1_shared[((((int)threadIdx.x) & 31) * 18)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 10)] * input1_shared[((((int)threadIdx.x) & 31) * 18)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) >> 5) * 100)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 576)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 10)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 576)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 2)] * input1_shared[((((int)threadIdx.x) & 31) * 18)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 12)] * input1_shared[((((int)threadIdx.x) & 31) * 18)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 2)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 576)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 12)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 576)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 50)] * input1_shared[((((int)threadIdx.x) & 31) * 18)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 60)] * input1_shared[((((int)threadIdx.x) & 31) * 18)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 50)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 576)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 60)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 576)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 52)] * input1_shared[((((int)threadIdx.x) & 31) * 18)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 62)] * input1_shared[((((int)threadIdx.x) & 31) * 18)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 52)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 576)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 62)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 576)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 25)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 9)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 35)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 9)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 25)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 585)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 35)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 585)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 27)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 9)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 37)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 9)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 27)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 585)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 37)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 585)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 75)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 9)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 85)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 9)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 75)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 585)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 85)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 585)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 77)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 9)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 87)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 9)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 77)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 585)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 87)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 585)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 1)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 1)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 11)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 1)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 1)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 577)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 11)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 577)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 3)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 1)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 13)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 1)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 3)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 577)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 13)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 577)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 51)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 1)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 61)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 1)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 51)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 577)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 61)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 577)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 53)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 1)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 63)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 1)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 53)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 577)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 63)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 577)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 26)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 10)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 36)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 10)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 26)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 586)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 36)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 586)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 28)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 10)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 38)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 10)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 28)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 586)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 38)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 586)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 76)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 10)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 86)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 10)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 76)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 586)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 86)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 586)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 78)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 10)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 88)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 10)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 78)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 586)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 88)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 586)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 2)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 2)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 12)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 2)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 2)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 578)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 12)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 578)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 4)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 2)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 14)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 2)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 4)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 578)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 14)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 578)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 52)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 2)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 62)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 2)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 52)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 578)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 62)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 578)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 54)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 2)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 64)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 2)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 54)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 578)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 64)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 578)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 27)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 11)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 37)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 11)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 27)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 587)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 37)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 587)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 29)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 11)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 39)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 11)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 29)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 587)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 39)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 587)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 77)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 11)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 87)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 11)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 77)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 587)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 87)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 587)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 79)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 11)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 89)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 11)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 79)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 587)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 89)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 587)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 5)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 3)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 15)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 3)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 5)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 579)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 15)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 579)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 7)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 3)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 17)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 3)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 7)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 579)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 17)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 579)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 55)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 3)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 65)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 3)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 55)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 579)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 65)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 579)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 57)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 3)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 67)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 3)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 57)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 579)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 67)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 579)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 30)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 12)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 40)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 12)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 30)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 588)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 40)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 588)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 32)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 12)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 42)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 12)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 32)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 588)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 42)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 588)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 80)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 12)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 90)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 12)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 80)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 588)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 90)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 588)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 82)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 12)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 92)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 12)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 82)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 588)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 92)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 588)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 6)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 4)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 16)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 4)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 6)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 580)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 16)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 580)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 8)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 4)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 18)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 4)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 8)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 580)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 18)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 580)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 56)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 4)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 66)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 4)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 56)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 580)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 66)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 580)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 58)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 4)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 68)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 4)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 58)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 580)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 68)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 580)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 31)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 13)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 41)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 13)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 31)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 589)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 41)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 589)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 33)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 13)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 43)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 13)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 33)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 589)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 43)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 589)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 81)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 13)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 91)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 13)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 81)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 589)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 91)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 589)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 83)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 13)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 93)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 13)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 83)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 589)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 93)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 589)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 7)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 5)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 17)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 5)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 7)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 581)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 17)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 581)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 9)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 5)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 19)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 5)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 9)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 581)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 19)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 581)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 57)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 5)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 67)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 5)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 57)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 581)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 67)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 581)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 59)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 5)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 69)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 5)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 59)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 581)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 69)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 581)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 32)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 14)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 42)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 14)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 32)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 590)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 42)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 590)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 34)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 14)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 44)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 14)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 34)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 590)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 44)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 590)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 82)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 14)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 92)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 14)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 82)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 590)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 92)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 590)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 84)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 14)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 94)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 14)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 84)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 590)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 94)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 590)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 10)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 6)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 20)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 6)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 10)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 582)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 20)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 582)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 12)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 6)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 22)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 6)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 12)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 582)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 22)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 582)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 60)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 6)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 70)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 6)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 60)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 582)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 70)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 582)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 62)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 6)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 72)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 6)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 62)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 582)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 72)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 582)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 35)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 15)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 45)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 15)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 35)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 591)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 45)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 591)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 37)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 15)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 47)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 15)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 37)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 591)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 47)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 591)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 85)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 15)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 95)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 15)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 85)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 591)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 95)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 591)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 87)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 15)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 97)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 15)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 87)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 591)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 97)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 591)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 11)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 7)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 21)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 7)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 11)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 583)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 21)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 583)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 13)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 7)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 23)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 7)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 13)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 583)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 23)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 583)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 61)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 7)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 71)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 7)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 61)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 583)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 71)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 583)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 63)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 7)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 73)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 7)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 63)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 583)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 73)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 583)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 36)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 16)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 46)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 16)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 36)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 592)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 46)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 592)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 38)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 16)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 48)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 16)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 38)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 592)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 48)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 592)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 86)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 16)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 96)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 16)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 86)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 592)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 96)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 592)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 88)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 16)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 98)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 16)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 88)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 592)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 98)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 592)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 12)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 8)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 22)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 8)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 12)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 584)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 22)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 584)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 14)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 8)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 24)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 8)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 14)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 584)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 24)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 584)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 62)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 8)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 72)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 8)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 62)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 584)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 72)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 584)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 64)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 8)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 74)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 8)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 64)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 584)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 74)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 584)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 37)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 17)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 47)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 17)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 37)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 593)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 47)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 593)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 39)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 17)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 49)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 17)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 39)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 593)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 49)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 593)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 87)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 17)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 97)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 17)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 87)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 593)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 97)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 593)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 89)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 17)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 99)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 17)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 89)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 593)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[(((((int)threadIdx.x) >> 5) * 100) + 99)] * input1_shared[(((((int)threadIdx.x) & 31) * 18) + 593)]));
          }
          for (int i0_inner = 0; i0_inner < 2; ++i0_inner) {
            for (int i3_inner = 0; i3_inner < 2; ++i3_inner) {
              compute[((((((((((int)threadIdx.x) >> 5) * 100352) + (i0_inner * 50176)) + ((((int)blockIdx.x) / 49) * 12544)) + ((((int)threadIdx.x) & 31) * 196)) + (((((int)blockIdx.x) % 49) / 7) * 28)) + ((((int)blockIdx.x) % 7) * 2)) + i3_inner)] = max((conv2d_nchw[((i0_inner * 2) + i3_inner)] + input2[((((((((((int)threadIdx.x) >> 5) * 100352) + (i0_inner * 50176)) + ((((int)blockIdx.x) / 49) * 12544)) + ((((int)threadIdx.x) & 31) * 196)) + (((((int)blockIdx.x) % 49) / 7) * 28)) + ((((int)blockIdx.x) % 7) * 2)) + i3_inner)]), 0.000000e+00f);
              compute[(((((((((((int)threadIdx.x) >> 5) * 100352) + (i0_inner * 50176)) + ((((int)blockIdx.x) / 49) * 12544)) + ((((int)threadIdx.x) & 31) * 196)) + (((((int)blockIdx.x) % 49) / 7) * 28)) + ((((int)blockIdx.x) % 7) * 2)) + i3_inner) + 14)] = max((conv2d_nchw[(((i0_inner * 2) + i3_inner) + 4)] + input2[(((((((((((int)threadIdx.x) >> 5) * 100352) + (i0_inner * 50176)) + ((((int)blockIdx.x) / 49) * 12544)) + ((((int)threadIdx.x) & 31) * 196)) + (((((int)blockIdx.x) % 49) / 7) * 28)) + ((((int)blockIdx.x) % 7) * 2)) + i3_inner) + 14)]), 0.000000e+00f);
              compute[(((((((((((int)threadIdx.x) >> 5) * 100352) + (i0_inner * 50176)) + ((((int)blockIdx.x) / 49) * 12544)) + ((((int)threadIdx.x) & 31) * 196)) + (((((int)blockIdx.x) % 49) / 7) * 28)) + ((((int)blockIdx.x) % 7) * 2)) + i3_inner) + 6272)] = max((conv2d_nchw[(((i0_inner * 2) + i3_inner) + 8)] + input2[(((((((((((int)threadIdx.x) >> 5) * 100352) + (i0_inner * 50176)) + ((((int)blockIdx.x) / 49) * 12544)) + ((((int)threadIdx.x) & 31) * 196)) + (((((int)blockIdx.x) % 49) / 7) * 28)) + ((((int)blockIdx.x) % 7) * 2)) + i3_inner) + 6272)]), 0.000000e+00f);
              compute[(((((((((((int)threadIdx.x) >> 5) * 100352) + (i0_inner * 50176)) + ((((int)blockIdx.x) / 49) * 12544)) + ((((int)threadIdx.x) & 31) * 196)) + (((((int)blockIdx.x) % 49) / 7) * 28)) + ((((int)blockIdx.x) % 7) * 2)) + i3_inner) + 6286)] = max((conv2d_nchw[(((i0_inner * 2) + i3_inner) + 12)] + input2[(((((((((((int)threadIdx.x) >> 5) * 100352) + (i0_inner * 50176)) + ((((int)blockIdx.x) / 49) * 12544)) + ((((int)threadIdx.x) & 31) * 196)) + (((((int)blockIdx.x) % 49) / 7) * 28)) + ((((int)blockIdx.x) % 7) * 2)) + i3_inner) + 6286)]), 0.000000e+00f);
            }
          }
        }

    }

}
extern void Matched_Pattern_float_float_float_float_cuda_Matched_Pattern_548_Call(const dim3 &grids, const dim3 &blocks, unsigned mem, cudaStream_t stream, float* input0, float* input1, float* input2, float* output0) {
    Matched_Pattern_float_float_float_float_cuda_Matched_Pattern_548<<<grids, blocks, mem, stream>>>(input0, input1, input2, output0);
}
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

