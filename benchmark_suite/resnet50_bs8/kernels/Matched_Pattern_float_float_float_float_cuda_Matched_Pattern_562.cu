#include "shared.h"
// Node name:	Matched_Pattern_562
// Description:	Matched_Pattern
// Input:
//	- name: Relu_288_0	type: float	shape: Shape{8, 512, 7, 7}
//	- name: Constant_517_0	type: float	shape: Shape{512, 512, 3, 3}
//	- name: Broadcast_518_0	type: float	shape: Shape{8, 512, 7, 7}
// Output:
//	- name: Relu_292_0	type: float	shape: Shape{8, 512, 7, 7}
extern "C" __global__  void Matched_Pattern_float_float_float_float_cuda_Matched_Pattern_562(float* input0, float* input1, float* input2, float* output0)
{
    __shared__ float pad_temp_shared[1296];
    __shared__ float input1_shared[2304];
    {
        float* compute = output0;
        {
          float conv2d_nchw[7];
          
          
          conv2d_nchw[0] = 0.000000e+00f;
          conv2d_nchw[1] = 0.000000e+00f;
          conv2d_nchw[2] = 0.000000e+00f;
          conv2d_nchw[3] = 0.000000e+00f;
          conv2d_nchw[4] = 0.000000e+00f;
          conv2d_nchw[5] = 0.000000e+00f;
          conv2d_nchw[6] = 0.000000e+00f;
          for (int rc_outer_outer = 0; rc_outer_outer < 32; ++rc_outer_outer) {
            __syncthreads();
            pad_temp_shared[(((int)threadIdx.x) * 9)] = 0.000000e+00f;
            pad_temp_shared[((((int)threadIdx.x) * 9) + 1)] = (((1 <= (((int)threadIdx.x) % 9)) && ((((int)threadIdx.x) % 9) < 8)) ? input0[((((((((int)blockIdx.x) >> 5) * 25088) + (rc_outer_outer * 784)) + ((((int)threadIdx.x) / 9) * 49)) + ((((int)threadIdx.x) % 9) * 7)) - 7)] : 0.000000e+00f);
            pad_temp_shared[((((int)threadIdx.x) * 9) + 2)] = (((1 <= (((int)threadIdx.x) % 9)) && ((((int)threadIdx.x) % 9) < 8)) ? input0[((((((((int)blockIdx.x) >> 5) * 25088) + (rc_outer_outer * 784)) + ((((int)threadIdx.x) / 9) * 49)) + ((((int)threadIdx.x) % 9) * 7)) - 6)] : 0.000000e+00f);
            pad_temp_shared[((((int)threadIdx.x) * 9) + 3)] = (((1 <= (((int)threadIdx.x) % 9)) && ((((int)threadIdx.x) % 9) < 8)) ? input0[((((((((int)blockIdx.x) >> 5) * 25088) + (rc_outer_outer * 784)) + ((((int)threadIdx.x) / 9) * 49)) + ((((int)threadIdx.x) % 9) * 7)) - 5)] : 0.000000e+00f);
            pad_temp_shared[((((int)threadIdx.x) * 9) + 4)] = (((1 <= (((int)threadIdx.x) % 9)) && ((((int)threadIdx.x) % 9) < 8)) ? input0[((((((((int)blockIdx.x) >> 5) * 25088) + (rc_outer_outer * 784)) + ((((int)threadIdx.x) / 9) * 49)) + ((((int)threadIdx.x) % 9) * 7)) - 4)] : 0.000000e+00f);
            pad_temp_shared[((((int)threadIdx.x) * 9) + 5)] = (((1 <= (((int)threadIdx.x) % 9)) && ((((int)threadIdx.x) % 9) < 8)) ? input0[((((((((int)blockIdx.x) >> 5) * 25088) + (rc_outer_outer * 784)) + ((((int)threadIdx.x) / 9) * 49)) + ((((int)threadIdx.x) % 9) * 7)) - 3)] : 0.000000e+00f);
            pad_temp_shared[((((int)threadIdx.x) * 9) + 6)] = (((1 <= (((int)threadIdx.x) % 9)) && ((((int)threadIdx.x) % 9) < 8)) ? input0[((((((((int)blockIdx.x) >> 5) * 25088) + (rc_outer_outer * 784)) + ((((int)threadIdx.x) / 9) * 49)) + ((((int)threadIdx.x) % 9) * 7)) - 2)] : 0.000000e+00f);
            pad_temp_shared[((((int)threadIdx.x) * 9) + 7)] = (((1 <= (((int)threadIdx.x) % 9)) && ((((int)threadIdx.x) % 9) < 8)) ? input0[((((((((int)blockIdx.x) >> 5) * 25088) + (rc_outer_outer * 784)) + ((((int)threadIdx.x) / 9) * 49)) + ((((int)threadIdx.x) % 9) * 7)) - 1)] : 0.000000e+00f);
            pad_temp_shared[((((int)threadIdx.x) * 9) + 8)] = 0.000000e+00f;
            if (((int)threadIdx.x) < 32) {
              pad_temp_shared[((((int)threadIdx.x) * 9) + 1008)] = 0.000000e+00f;
              pad_temp_shared[((((int)threadIdx.x) * 9) + 1009)] = (((1 <= ((((int)threadIdx.x) + 4) % 9)) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? input0[((((((((int)blockIdx.x) >> 5) * 25088) + (rc_outer_outer * 784)) + (((((int)threadIdx.x) + 112) / 9) * 49)) + (((((int)threadIdx.x) + 4) % 9) * 7)) - 7)] : 0.000000e+00f);
              pad_temp_shared[((((int)threadIdx.x) * 9) + 1010)] = (((1 <= ((((int)threadIdx.x) + 4) % 9)) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? input0[((((((((int)blockIdx.x) >> 5) * 25088) + (rc_outer_outer * 784)) + (((((int)threadIdx.x) + 112) / 9) * 49)) + (((((int)threadIdx.x) + 4) % 9) * 7)) - 6)] : 0.000000e+00f);
              pad_temp_shared[((((int)threadIdx.x) * 9) + 1011)] = (((1 <= ((((int)threadIdx.x) + 4) % 9)) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? input0[((((((((int)blockIdx.x) >> 5) * 25088) + (rc_outer_outer * 784)) + (((((int)threadIdx.x) + 112) / 9) * 49)) + (((((int)threadIdx.x) + 4) % 9) * 7)) - 5)] : 0.000000e+00f);
              pad_temp_shared[((((int)threadIdx.x) * 9) + 1012)] = (((1 <= ((((int)threadIdx.x) + 4) % 9)) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? input0[((((((((int)blockIdx.x) >> 5) * 25088) + (rc_outer_outer * 784)) + (((((int)threadIdx.x) + 112) / 9) * 49)) + (((((int)threadIdx.x) + 4) % 9) * 7)) - 4)] : 0.000000e+00f);
              pad_temp_shared[((((int)threadIdx.x) * 9) + 1013)] = (((1 <= ((((int)threadIdx.x) + 4) % 9)) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? input0[((((((((int)blockIdx.x) >> 5) * 25088) + (rc_outer_outer * 784)) + (((((int)threadIdx.x) + 112) / 9) * 49)) + (((((int)threadIdx.x) + 4) % 9) * 7)) - 3)] : 0.000000e+00f);
              pad_temp_shared[((((int)threadIdx.x) * 9) + 1014)] = (((1 <= ((((int)threadIdx.x) + 4) % 9)) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? input0[((((((((int)blockIdx.x) >> 5) * 25088) + (rc_outer_outer * 784)) + (((((int)threadIdx.x) + 112) / 9) * 49)) + (((((int)threadIdx.x) + 4) % 9) * 7)) - 2)] : 0.000000e+00f);
              pad_temp_shared[((((int)threadIdx.x) * 9) + 1015)] = (((1 <= ((((int)threadIdx.x) + 4) % 9)) && (((((int)threadIdx.x) + 4) % 9) < 8)) ? input0[((((((((int)blockIdx.x) >> 5) * 25088) + (rc_outer_outer * 784)) + (((((int)threadIdx.x) + 112) / 9) * 49)) + (((((int)threadIdx.x) + 4) % 9) * 7)) - 1)] : 0.000000e+00f);
              pad_temp_shared[((((int)threadIdx.x) * 9) + 1016)] = 0.000000e+00f;
            }
            input1_shared[((int)threadIdx.x)] = input1[((((((int)blockIdx.x) & 31) * 73728) + (rc_outer_outer * 144)) + ((int)threadIdx.x))];
            input1_shared[(((int)threadIdx.x) + 112)] = input1[((((((((int)blockIdx.x) & 31) * 73728) + (((((int)threadIdx.x) + 112) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 112) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
            input1_shared[(((int)threadIdx.x) + 224)] = input1[((((((((int)blockIdx.x) & 31) * 73728) + (((((int)threadIdx.x) + 224) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 80) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
            input1_shared[(((int)threadIdx.x) + 336)] = input1[((((((((int)blockIdx.x) & 31) * 73728) + (((((int)threadIdx.x) + 336) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) / 3) + 16) % 48) * 3)) + (((int)threadIdx.x) % 3))];
            input1_shared[(((int)threadIdx.x) + 448)] = input1[((((((((int)blockIdx.x) & 31) * 73728) + (((((int)threadIdx.x) + 448) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
            input1_shared[(((int)threadIdx.x) + 560)] = input1[((((((((int)blockIdx.x) & 31) * 73728) + (((((int)threadIdx.x) + 560) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
            input1_shared[(((int)threadIdx.x) + 672)] = input1[((((((((int)blockIdx.x) & 31) * 73728) + (((((int)threadIdx.x) + 672) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) / 3) + 32) % 48) * 3)) + (((int)threadIdx.x) % 3))];
            input1_shared[(((int)threadIdx.x) + 784)] = input1[((((((((int)blockIdx.x) & 31) * 73728) + (((((int)threadIdx.x) + 784) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 64) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
            input1_shared[(((int)threadIdx.x) + 896)] = input1[((((((((int)blockIdx.x) & 31) * 73728) + (((((int)threadIdx.x) + 896) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
            input1_shared[(((int)threadIdx.x) + 1008)] = input1[(((((((int)blockIdx.x) & 31) * 73728) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 32256)];
            input1_shared[(((int)threadIdx.x) + 1120)] = input1[((((((((int)blockIdx.x) & 31) * 73728) + (((((int)threadIdx.x) + 1120) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 112) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
            input1_shared[(((int)threadIdx.x) + 1232)] = input1[((((((((int)blockIdx.x) & 31) * 73728) + (((((int)threadIdx.x) + 1232) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 80) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
            input1_shared[(((int)threadIdx.x) + 1344)] = input1[((((((((int)blockIdx.x) & 31) * 73728) + (((((int)threadIdx.x) + 1344) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) / 3) + 16) % 48) * 3)) + (((int)threadIdx.x) % 3))];
            input1_shared[(((int)threadIdx.x) + 1456)] = input1[((((((((int)blockIdx.x) & 31) * 73728) + (((((int)threadIdx.x) + 1456) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 16) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
            input1_shared[(((int)threadIdx.x) + 1568)] = input1[((((((((int)blockIdx.x) & 31) * 73728) + (((((int)threadIdx.x) + 1568) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 128) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
            input1_shared[(((int)threadIdx.x) + 1680)] = input1[((((((((int)blockIdx.x) & 31) * 73728) + (((((int)threadIdx.x) + 1680) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) / 3) + 32) % 48) * 3)) + (((int)threadIdx.x) % 3))];
            input1_shared[(((int)threadIdx.x) + 1792)] = input1[((((((((int)blockIdx.x) & 31) * 73728) + (((((int)threadIdx.x) + 1792) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 64) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
            input1_shared[(((int)threadIdx.x) + 1904)] = input1[((((((((int)blockIdx.x) & 31) * 73728) + (((((int)threadIdx.x) + 1904) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 32) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
            input1_shared[(((int)threadIdx.x) + 2016)] = input1[(((((((int)blockIdx.x) & 31) * 73728) + (rc_outer_outer * 144)) + ((int)threadIdx.x)) + 64512)];
            input1_shared[(((int)threadIdx.x) + 2128)] = input1[((((((((int)blockIdx.x) & 31) * 73728) + (((((int)threadIdx.x) + 2128) / 144) * 4608)) + (rc_outer_outer * 144)) + ((((((int)threadIdx.x) + 112) % 144) / 3) * 3)) + ((((int)threadIdx.x) + 1) % 3))];
            if (((int)threadIdx.x) < 64) {
              input1_shared[(((int)threadIdx.x) + 2240)] = input1[((((((((int)blockIdx.x) & 31) * 73728) + (((((int)threadIdx.x) + 2240) / 144) * 4608)) + (rc_outer_outer * 144)) + (((((int)threadIdx.x) + 80) / 3) * 3)) + ((((int)threadIdx.x) + 2) % 3))];
            }
            __syncthreads();
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * input1_shared[((((int)threadIdx.x) / 7) * 144)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 9)] * input1_shared[((((int)threadIdx.x) / 7) * 144)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 18)] * input1_shared[((((int)threadIdx.x) / 7) * 144)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 27)] * input1_shared[((((int)threadIdx.x) / 7) * 144)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 36)] * input1_shared[((((int)threadIdx.x) / 7) * 144)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 45)] * input1_shared[((((int)threadIdx.x) / 7) * 144)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 54)] * input1_shared[((((int)threadIdx.x) / 7) * 144)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 9)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 3)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 18)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 3)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 27)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 3)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 36)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 3)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 45)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 3)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 54)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 3)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 3)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 18)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 6)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 27)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 6)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 36)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 6)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 45)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 6)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 54)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 6)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 6)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 72)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 6)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 81)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 9)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 90)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 9)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 99)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 9)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 108)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 9)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 117)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 9)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 126)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 9)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 135)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 9)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 90)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 12)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 99)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 12)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 108)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 12)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 117)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 12)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 126)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 12)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 135)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 12)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 144)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 12)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 99)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 15)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 108)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 15)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 117)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 15)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 126)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 15)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 135)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 15)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 144)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 15)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 153)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 15)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 162)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 18)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 171)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 18)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 180)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 18)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 189)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 18)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 198)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 18)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 207)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 18)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 216)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 18)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 171)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 21)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 180)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 21)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 189)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 21)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 198)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 21)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 207)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 21)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 216)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 21)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 225)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 21)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 180)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 24)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 189)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 24)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 198)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 24)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 207)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 24)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 216)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 24)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 225)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 24)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 234)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 24)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 243)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 27)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 252)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 27)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 261)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 27)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 270)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 27)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 279)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 27)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 288)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 27)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 297)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 27)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 252)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 30)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 261)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 30)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 270)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 30)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 279)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 30)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 288)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 30)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 297)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 30)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 306)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 30)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 261)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 33)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 270)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 33)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 279)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 33)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 288)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 33)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 297)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 33)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 306)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 33)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 315)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 33)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 1)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 10)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 1)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 19)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 1)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 1)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 37)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 1)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 46)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 1)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 55)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 1)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 10)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 4)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 19)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 4)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 4)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 37)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 4)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 46)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 4)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 55)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 4)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 64)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 4)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 19)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 7)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 7)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 37)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 7)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 46)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 7)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 55)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 7)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 64)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 7)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 73)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 7)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 82)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 10)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 10)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 100)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 10)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 109)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 10)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 118)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 10)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 127)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 10)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 136)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 10)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 13)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 100)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 13)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 109)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 13)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 118)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 13)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 127)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 13)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 136)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 13)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 145)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 13)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 100)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 16)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 109)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 16)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 118)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 16)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 127)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 16)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 136)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 16)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 145)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 16)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 154)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 16)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 163)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 19)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 172)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 19)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 181)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 19)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 190)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 19)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 199)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 19)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 208)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 19)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 217)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 19)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 172)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 22)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 181)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 22)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 190)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 22)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 199)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 22)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 208)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 22)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 217)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 22)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 226)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 22)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 181)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 25)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 190)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 25)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 199)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 25)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 208)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 25)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 217)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 25)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 226)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 25)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 235)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 25)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 244)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 28)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 253)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 28)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 262)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 28)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 271)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 28)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 280)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 28)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 289)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 28)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 298)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 28)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 253)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 31)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 262)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 31)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 271)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 31)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 280)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 31)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 289)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 31)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 298)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 31)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 307)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 31)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 262)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 34)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 271)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 34)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 280)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 34)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 289)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 34)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 298)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 34)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 307)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 34)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 316)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 34)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 2)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 2)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 11)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 2)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 20)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 2)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 29)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 2)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 38)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 2)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 47)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 2)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 2)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 11)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 5)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 20)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 5)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 29)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 5)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 38)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 5)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 47)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 5)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 5)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 65)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 5)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 20)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 8)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 29)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 8)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 38)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 8)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 47)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 8)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 8)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 65)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 8)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 74)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 8)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 83)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 11)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 92)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 11)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 101)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 11)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 110)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 11)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 119)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 11)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 128)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 11)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 137)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 11)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 92)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 14)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 101)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 14)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 110)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 14)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 119)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 14)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 128)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 14)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 137)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 14)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 146)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 14)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 101)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 17)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 110)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 17)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 119)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 17)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 128)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 17)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 137)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 17)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 146)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 17)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 155)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 17)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 164)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 20)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 173)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 20)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 182)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 20)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 191)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 20)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 200)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 20)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 209)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 20)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 218)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 20)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 173)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 23)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 182)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 23)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 191)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 23)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 200)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 23)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 209)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 23)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 218)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 23)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 227)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 23)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 182)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 26)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 191)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 26)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 200)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 26)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 209)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 26)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 218)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 26)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 227)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 26)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 236)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 26)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 245)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 29)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 254)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 29)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 263)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 29)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 272)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 29)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 281)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 29)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 290)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 29)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 299)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 29)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 254)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 32)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 263)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 32)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 272)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 32)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 281)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 32)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 290)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 32)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 299)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 32)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 308)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 32)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 263)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 35)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 272)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 35)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 281)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 35)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 290)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 35)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 299)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 35)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 308)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 35)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 317)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 35)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 324)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 36)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 333)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 36)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 342)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 36)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 351)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 36)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 360)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 36)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 369)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 36)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 378)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 36)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 333)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 39)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 342)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 39)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 351)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 39)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 360)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 39)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 369)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 39)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 378)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 39)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 387)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 39)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 342)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 42)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 351)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 42)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 360)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 42)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 369)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 42)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 378)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 42)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 387)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 42)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 396)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 42)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 405)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 45)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 414)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 45)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 423)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 45)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 432)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 45)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 441)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 45)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 450)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 45)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 459)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 45)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 414)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 48)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 423)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 48)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 432)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 48)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 441)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 48)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 450)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 48)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 459)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 48)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 468)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 48)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 423)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 51)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 432)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 51)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 441)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 51)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 450)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 51)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 459)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 51)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 468)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 51)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 477)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 51)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 486)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 54)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 495)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 54)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 504)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 54)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 513)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 54)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 522)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 54)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 531)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 54)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 540)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 54)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 495)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 57)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 504)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 57)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 513)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 57)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 522)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 57)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 531)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 57)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 540)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 57)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 549)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 57)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 504)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 60)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 513)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 60)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 522)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 60)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 531)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 60)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 540)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 60)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 549)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 60)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 558)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 60)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 567)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 63)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 576)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 63)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 585)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 63)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 594)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 63)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 603)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 63)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 612)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 63)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 621)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 63)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 576)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 66)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 585)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 66)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 594)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 66)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 603)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 66)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 612)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 66)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 621)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 66)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 630)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 66)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 585)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 69)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 594)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 69)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 603)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 69)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 612)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 69)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 621)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 69)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 630)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 69)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 639)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 69)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 325)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 37)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 334)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 37)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 343)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 37)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 352)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 37)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 361)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 37)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 370)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 37)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 379)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 37)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 334)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 40)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 343)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 40)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 352)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 40)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 361)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 40)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 370)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 40)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 379)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 40)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 388)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 40)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 343)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 43)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 352)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 43)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 361)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 43)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 370)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 43)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 379)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 43)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 388)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 43)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 397)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 43)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 406)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 46)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 415)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 46)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 424)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 46)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 433)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 46)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 442)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 46)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 451)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 46)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 460)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 46)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 415)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 49)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 424)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 49)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 433)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 49)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 442)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 49)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 451)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 49)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 460)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 49)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 469)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 49)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 424)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 52)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 433)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 52)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 442)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 52)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 451)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 52)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 460)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 52)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 469)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 52)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 478)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 52)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 487)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 55)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 496)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 55)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 505)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 55)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 514)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 55)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 523)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 55)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 532)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 55)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 541)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 55)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 496)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 58)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 505)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 58)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 514)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 58)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 523)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 58)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 532)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 58)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 541)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 58)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 550)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 58)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 505)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 61)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 514)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 61)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 523)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 61)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 532)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 61)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 541)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 61)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 550)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 61)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 559)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 61)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 568)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 64)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 577)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 64)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 586)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 64)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 595)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 64)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 604)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 64)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 613)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 64)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 622)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 64)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 577)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 67)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 586)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 67)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 595)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 67)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 604)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 67)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 613)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 67)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 622)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 67)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 631)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 67)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 586)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 70)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 595)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 70)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 604)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 70)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 613)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 70)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 622)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 70)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 631)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 70)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 640)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 70)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 326)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 38)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 335)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 38)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 344)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 38)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 353)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 38)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 362)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 38)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 371)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 38)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 380)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 38)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 335)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 41)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 344)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 41)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 353)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 41)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 362)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 41)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 371)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 41)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 380)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 41)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 389)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 41)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 344)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 44)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 353)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 44)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 362)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 44)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 371)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 44)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 380)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 44)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 389)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 44)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 398)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 44)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 407)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 47)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 416)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 47)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 425)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 47)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 434)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 47)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 443)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 47)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 452)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 47)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 461)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 47)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 416)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 50)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 425)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 50)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 434)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 50)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 443)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 50)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 452)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 50)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 461)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 50)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 470)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 50)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 425)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 53)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 434)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 53)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 443)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 53)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 452)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 53)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 461)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 53)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 470)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 53)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 479)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 53)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 488)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 56)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 497)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 56)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 506)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 56)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 515)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 56)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 524)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 56)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 533)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 56)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 542)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 56)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 497)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 59)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 506)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 59)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 515)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 59)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 524)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 59)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 533)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 59)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 542)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 59)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 551)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 59)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 506)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 62)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 515)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 62)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 524)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 62)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 533)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 62)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 542)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 62)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 551)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 62)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 560)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 62)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 569)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 65)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 578)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 65)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 587)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 65)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 596)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 65)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 605)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 65)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 614)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 65)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 623)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 65)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 578)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 68)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 587)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 68)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 596)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 68)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 605)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 68)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 614)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 68)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 623)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 68)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 632)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 68)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 587)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 71)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 596)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 71)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 605)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 71)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 614)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 71)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 623)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 71)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 632)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 71)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 641)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 71)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 648)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 72)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 657)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 72)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 666)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 72)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 675)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 72)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 684)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 72)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 693)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 72)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 702)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 72)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 657)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 75)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 666)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 75)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 675)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 75)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 684)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 75)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 693)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 75)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 702)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 75)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 711)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 75)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 666)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 78)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 675)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 78)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 684)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 78)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 693)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 78)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 702)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 78)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 711)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 78)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 720)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 78)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 729)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 81)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 738)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 81)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 747)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 81)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 756)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 81)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 765)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 81)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 774)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 81)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 783)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 81)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 738)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 84)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 747)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 84)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 756)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 84)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 765)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 84)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 774)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 84)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 783)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 84)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 792)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 84)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 747)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 87)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 756)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 87)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 765)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 87)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 774)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 87)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 783)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 87)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 792)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 87)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 801)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 87)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 810)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 90)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 819)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 90)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 828)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 90)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 837)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 90)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 846)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 90)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 855)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 90)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 864)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 90)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 819)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 93)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 828)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 93)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 837)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 93)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 846)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 93)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 855)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 93)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 864)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 93)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 873)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 93)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 828)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 96)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 837)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 96)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 846)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 96)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 855)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 96)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 864)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 96)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 873)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 96)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 882)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 96)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 891)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 99)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 900)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 99)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 909)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 99)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 918)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 99)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 927)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 99)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 936)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 99)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 945)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 99)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 900)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 102)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 909)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 102)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 918)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 102)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 927)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 102)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 936)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 102)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 945)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 102)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 954)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 102)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 909)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 105)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 918)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 105)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 927)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 105)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 936)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 105)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 945)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 105)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 954)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 105)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 963)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 105)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 649)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 73)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 658)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 73)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 667)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 73)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 676)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 73)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 685)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 73)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 694)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 73)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 703)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 73)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 658)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 76)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 667)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 76)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 676)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 76)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 685)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 76)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 694)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 76)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 703)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 76)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 712)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 76)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 667)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 79)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 676)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 79)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 685)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 79)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 694)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 79)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 703)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 79)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 712)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 79)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 721)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 79)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 730)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 82)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 739)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 82)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 748)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 82)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 757)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 82)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 766)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 82)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 775)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 82)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 784)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 82)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 739)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 85)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 748)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 85)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 757)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 85)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 766)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 85)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 775)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 85)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 784)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 85)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 793)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 85)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 748)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 88)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 757)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 88)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 766)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 88)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 775)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 88)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 784)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 88)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 793)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 88)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 802)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 88)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 811)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 91)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 820)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 91)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 829)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 91)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 838)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 91)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 847)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 91)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 856)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 91)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 865)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 91)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 820)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 94)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 829)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 94)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 838)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 94)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 847)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 94)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 856)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 94)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 865)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 94)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 874)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 94)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 829)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 97)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 838)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 97)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 847)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 97)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 856)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 97)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 865)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 97)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 874)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 97)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 883)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 97)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 892)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 100)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 901)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 100)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 910)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 100)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 919)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 100)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 928)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 100)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 937)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 100)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 946)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 100)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 901)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 103)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 910)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 103)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 919)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 103)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 928)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 103)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 937)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 103)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 946)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 103)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 955)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 103)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 910)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 106)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 919)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 106)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 928)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 106)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 937)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 106)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 946)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 106)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 955)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 106)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 964)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 106)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 650)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 74)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 659)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 74)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 668)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 74)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 677)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 74)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 686)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 74)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 695)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 74)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 704)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 74)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 659)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 77)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 668)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 77)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 677)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 77)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 686)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 77)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 695)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 77)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 704)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 77)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 713)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 77)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 668)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 80)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 677)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 80)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 686)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 80)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 695)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 80)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 704)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 80)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 713)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 80)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 722)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 80)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 731)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 83)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 740)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 83)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 749)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 83)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 758)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 83)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 767)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 83)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 776)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 83)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 785)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 83)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 740)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 86)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 749)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 86)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 758)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 86)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 767)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 86)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 776)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 86)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 785)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 86)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 794)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 86)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 749)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 89)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 758)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 89)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 767)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 89)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 776)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 89)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 785)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 89)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 794)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 89)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 803)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 89)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 812)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 92)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 821)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 92)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 830)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 92)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 839)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 92)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 848)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 92)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 857)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 92)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 866)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 92)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 821)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 95)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 830)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 95)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 839)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 95)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 848)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 95)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 857)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 95)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 866)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 95)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 875)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 95)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 830)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 98)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 839)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 98)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 848)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 98)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 857)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 98)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 866)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 98)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 875)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 98)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 884)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 98)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 893)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 101)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 902)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 101)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 911)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 101)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 920)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 101)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 929)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 101)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 938)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 101)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 947)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 101)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 902)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 104)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 911)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 104)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 920)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 104)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 929)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 104)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 938)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 104)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 947)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 104)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 956)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 104)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 911)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 107)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 920)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 107)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 929)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 107)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 938)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 107)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 947)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 107)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 956)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 107)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 965)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 107)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 972)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 108)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 981)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 108)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 990)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 108)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 999)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 108)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1008)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 108)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1017)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 108)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1026)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 108)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 981)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 111)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 990)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 111)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 999)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 111)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1008)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 111)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1017)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 111)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1026)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 111)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1035)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 111)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 990)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 114)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 999)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 114)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1008)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 114)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1017)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 114)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1026)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 114)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1035)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 114)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1044)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 114)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1053)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 117)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1062)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 117)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1071)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 117)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1080)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 117)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1089)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 117)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1098)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 117)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1107)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 117)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1062)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 120)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1071)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 120)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1080)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 120)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1089)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 120)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1098)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 120)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1107)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 120)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1116)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 120)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1071)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 123)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1080)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 123)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1089)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 123)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1098)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 123)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1107)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 123)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1116)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 123)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1125)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 123)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1134)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 126)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1143)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 126)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1152)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 126)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1161)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 126)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1170)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 126)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1179)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 126)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1188)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 126)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1143)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 129)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1152)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 129)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1161)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 129)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1170)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 129)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1179)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 129)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1188)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 129)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1197)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 129)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1152)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 132)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1161)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 132)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1170)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 132)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1179)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 132)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1188)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 132)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1197)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 132)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1206)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 132)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1215)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 135)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1224)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 135)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1233)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 135)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1242)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 135)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1251)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 135)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1260)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 135)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1269)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 135)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1224)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 138)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1233)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 138)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1242)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 138)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1251)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 138)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1260)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 138)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1269)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 138)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1278)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 138)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1233)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 141)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1242)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 141)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1251)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 141)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1260)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 141)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1269)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 141)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1278)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 141)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1287)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 141)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 973)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 109)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 982)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 109)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 991)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 109)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1000)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 109)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1009)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 109)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1018)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 109)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1027)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 109)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 982)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 112)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 991)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 112)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1000)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 112)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1009)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 112)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1018)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 112)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1027)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 112)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1036)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 112)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 991)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 115)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1000)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 115)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1009)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 115)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1018)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 115)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1027)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 115)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1036)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 115)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1045)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 115)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1054)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 118)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1063)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 118)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1072)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 118)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1081)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 118)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1090)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 118)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1099)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 118)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1108)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 118)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1063)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 121)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1072)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 121)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1081)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 121)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1090)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 121)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1099)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 121)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1108)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 121)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1117)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 121)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1072)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 124)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1081)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 124)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1090)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 124)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1099)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 124)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1108)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 124)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1117)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 124)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1126)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 124)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1135)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 127)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1144)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 127)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1153)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 127)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1162)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 127)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1171)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 127)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1180)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 127)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1189)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 127)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1144)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 130)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1153)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 130)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1162)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 130)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1171)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 130)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1180)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 130)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1189)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 130)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1198)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 130)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1153)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 133)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1162)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 133)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1171)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 133)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1180)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 133)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1189)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 133)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1198)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 133)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1207)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 133)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1216)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 136)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1225)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 136)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1234)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 136)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1243)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 136)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1252)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 136)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1261)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 136)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1270)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 136)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1225)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 139)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1234)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 139)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1243)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 139)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1252)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 139)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1261)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 139)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1270)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 139)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1279)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 139)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1234)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 142)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1243)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 142)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1252)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 142)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1261)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 142)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1270)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 142)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1279)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 142)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1288)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 142)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 974)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 110)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 983)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 110)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 992)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 110)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1001)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 110)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1010)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 110)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1019)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 110)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1028)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 110)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 983)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 113)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 992)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 113)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1001)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 113)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1010)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 113)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1019)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 113)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1028)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 113)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1037)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 113)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 992)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 116)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1001)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 116)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1010)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 116)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1019)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 116)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1028)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 116)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1037)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 116)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1046)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 116)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1055)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 119)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1064)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 119)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1073)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 119)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1082)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 119)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1091)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 119)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1100)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 119)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1109)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 119)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1064)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 122)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1073)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 122)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1082)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 122)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1091)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 122)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1100)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 122)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1109)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 122)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1118)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 122)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1073)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 125)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1082)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 125)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1091)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 125)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1100)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 125)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1109)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 125)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1118)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 125)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1127)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 125)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1136)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 128)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1145)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 128)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1154)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 128)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1163)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 128)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1172)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 128)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1181)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 128)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1190)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 128)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1145)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 131)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1154)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 131)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1163)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 131)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1172)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 131)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1181)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 131)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1190)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 131)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1199)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 131)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1154)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 134)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1163)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 134)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1172)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 134)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1181)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 134)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1190)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 134)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1199)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 134)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1208)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 134)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1217)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 137)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1226)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 137)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1235)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 137)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1244)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 137)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1253)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 137)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1262)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 137)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1271)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 137)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1226)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 140)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1235)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 140)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1244)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 140)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1253)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 140)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1262)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 140)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1271)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 140)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1280)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 140)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1235)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 143)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1244)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 143)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1253)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 143)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1262)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 143)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1271)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 143)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1280)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 143)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1289)] * input1_shared[(((((int)threadIdx.x) / 7) * 144) + 143)]));
          }
          for (int i2_inner = 0; i2_inner < 7; ++i2_inner) {
            compute[((((((int)blockIdx.x) * 784) + ((((int)threadIdx.x) / 7) * 49)) + (i2_inner * 7)) + (((int)threadIdx.x) % 7))] = max((conv2d_nchw[i2_inner] + input2[((((((int)blockIdx.x) * 784) + ((((int)threadIdx.x) / 7) * 49)) + (i2_inner * 7)) + (((int)threadIdx.x) % 7))]), 0.000000e+00f);
          }
        }

    }

}
extern void Matched_Pattern_float_float_float_float_cuda_Matched_Pattern_562_Call(const dim3 &grids, const dim3 &blocks, unsigned mem, cudaStream_t stream, float* input0, float* input1, float* input2, float* output0) {
    Matched_Pattern_float_float_float_float_cuda_Matched_Pattern_562<<<grids, blocks, mem, stream>>>(input0, input1, input2, output0);
}
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

