#include "shared.h"
// Node name:	Matched_Pattern_582
// Description:	Matched_Pattern
// Input:
//	- name: Relu_279_0	type: float	shape: Shape{8, 512, 7, 7}
//	- name: Constant_511_0	type: float	shape: Shape{2048, 512, 1, 1}
//	- name: Broadcast_512_0	type: float	shape: Shape{8, 2048, 7, 7}
// Output:
//	- name: BatchNormInference_282_0	type: float	shape: Shape{8, 2048, 7, 7}
extern "C" __global__  void Matched_Pattern_float_float_float_float_cuda_Matched_Pattern_582(float* input0, float* input1, float* input2, float* output0)
{
    __shared__ float pad_temp_shared[1568];
    __shared__ float input1_shared[1024];
    {
        float* T_add = output0;
        {
          float conv2d_nchw[28];
          
          
          conv2d_nchw[0] = 0.000000e+00f;
          conv2d_nchw[1] = 0.000000e+00f;
          conv2d_nchw[2] = 0.000000e+00f;
          conv2d_nchw[3] = 0.000000e+00f;
          conv2d_nchw[4] = 0.000000e+00f;
          conv2d_nchw[5] = 0.000000e+00f;
          conv2d_nchw[6] = 0.000000e+00f;
          conv2d_nchw[7] = 0.000000e+00f;
          conv2d_nchw[8] = 0.000000e+00f;
          conv2d_nchw[9] = 0.000000e+00f;
          conv2d_nchw[10] = 0.000000e+00f;
          conv2d_nchw[11] = 0.000000e+00f;
          conv2d_nchw[12] = 0.000000e+00f;
          conv2d_nchw[13] = 0.000000e+00f;
          conv2d_nchw[14] = 0.000000e+00f;
          conv2d_nchw[15] = 0.000000e+00f;
          conv2d_nchw[16] = 0.000000e+00f;
          conv2d_nchw[17] = 0.000000e+00f;
          conv2d_nchw[18] = 0.000000e+00f;
          conv2d_nchw[19] = 0.000000e+00f;
          conv2d_nchw[20] = 0.000000e+00f;
          conv2d_nchw[21] = 0.000000e+00f;
          conv2d_nchw[22] = 0.000000e+00f;
          conv2d_nchw[23] = 0.000000e+00f;
          conv2d_nchw[24] = 0.000000e+00f;
          conv2d_nchw[25] = 0.000000e+00f;
          conv2d_nchw[26] = 0.000000e+00f;
          conv2d_nchw[27] = 0.000000e+00f;
          for (int rc_outer_outer = 0; rc_outer_outer < 16; ++rc_outer_outer) {
            __syncthreads();
            pad_temp_shared[((int)threadIdx.x)] = input0[((((((int)blockIdx.x) >> 6) * 25088) + (rc_outer_outer * 1568)) + ((int)threadIdx.x))];
            pad_temp_shared[(((int)threadIdx.x) + 56)] = input0[((((((((int)blockIdx.x) >> 6) * 25088) + (rc_outer_outer * 1568)) + (((((int)threadIdx.x) + 56) / 49) * 49)) + ((((((int)threadIdx.x) / 7) + 1) % 7) * 7)) + (((int)threadIdx.x) % 7))];
            pad_temp_shared[(((int)threadIdx.x) + 112)] = input0[((((((((int)blockIdx.x) >> 6) * 25088) + (rc_outer_outer * 1568)) + (((((int)threadIdx.x) + 112) / 49) * 49)) + ((((((int)threadIdx.x) / 7) + 2) % 7) * 7)) + (((int)threadIdx.x) % 7))];
            pad_temp_shared[(((int)threadIdx.x) + 168)] = input0[((((((((int)blockIdx.x) >> 6) * 25088) + (rc_outer_outer * 1568)) + (((((int)threadIdx.x) + 168) / 49) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 7) * 7)) + (((int)threadIdx.x) % 7))];
            pad_temp_shared[(((int)threadIdx.x) + 224)] = input0[((((((((int)blockIdx.x) >> 6) * 25088) + (rc_outer_outer * 1568)) + (((((int)threadIdx.x) + 224) / 49) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 7) * 7)) + (((int)threadIdx.x) % 7))];
            pad_temp_shared[(((int)threadIdx.x) + 280)] = input0[((((((((int)blockIdx.x) >> 6) * 25088) + (rc_outer_outer * 1568)) + (((((int)threadIdx.x) + 280) / 49) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 7) * 7)) + (((int)threadIdx.x) % 7))];
            pad_temp_shared[(((int)threadIdx.x) + 336)] = input0[((((((((int)blockIdx.x) >> 6) * 25088) + (rc_outer_outer * 1568)) + (((((int)threadIdx.x) + 336) / 49) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 7) * 7)) + (((int)threadIdx.x) % 7))];
            pad_temp_shared[(((int)threadIdx.x) + 392)] = input0[(((((((int)blockIdx.x) >> 6) * 25088) + (rc_outer_outer * 1568)) + ((int)threadIdx.x)) + 392)];
            pad_temp_shared[(((int)threadIdx.x) + 448)] = input0[((((((((int)blockIdx.x) >> 6) * 25088) + (rc_outer_outer * 1568)) + (((((int)threadIdx.x) + 448) / 49) * 49)) + ((((((int)threadIdx.x) / 7) + 1) % 7) * 7)) + (((int)threadIdx.x) % 7))];
            pad_temp_shared[(((int)threadIdx.x) + 504)] = input0[((((((((int)blockIdx.x) >> 6) * 25088) + (rc_outer_outer * 1568)) + (((((int)threadIdx.x) + 504) / 49) * 49)) + ((((((int)threadIdx.x) / 7) + 2) % 7) * 7)) + (((int)threadIdx.x) % 7))];
            pad_temp_shared[(((int)threadIdx.x) + 560)] = input0[((((((((int)blockIdx.x) >> 6) * 25088) + (rc_outer_outer * 1568)) + (((((int)threadIdx.x) + 560) / 49) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 7) * 7)) + (((int)threadIdx.x) % 7))];
            pad_temp_shared[(((int)threadIdx.x) + 616)] = input0[((((((((int)blockIdx.x) >> 6) * 25088) + (rc_outer_outer * 1568)) + (((((int)threadIdx.x) + 616) / 49) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 7) * 7)) + (((int)threadIdx.x) % 7))];
            pad_temp_shared[(((int)threadIdx.x) + 672)] = input0[((((((((int)blockIdx.x) >> 6) * 25088) + (rc_outer_outer * 1568)) + (((((int)threadIdx.x) + 672) / 49) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 7) * 7)) + (((int)threadIdx.x) % 7))];
            pad_temp_shared[(((int)threadIdx.x) + 728)] = input0[((((((((int)blockIdx.x) >> 6) * 25088) + (rc_outer_outer * 1568)) + (((((int)threadIdx.x) + 728) / 49) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 7) * 7)) + (((int)threadIdx.x) % 7))];
            pad_temp_shared[(((int)threadIdx.x) + 784)] = input0[(((((((int)blockIdx.x) >> 6) * 25088) + (rc_outer_outer * 1568)) + ((int)threadIdx.x)) + 784)];
            pad_temp_shared[(((int)threadIdx.x) + 840)] = input0[((((((((int)blockIdx.x) >> 6) * 25088) + (rc_outer_outer * 1568)) + (((((int)threadIdx.x) + 840) / 49) * 49)) + ((((((int)threadIdx.x) / 7) + 1) % 7) * 7)) + (((int)threadIdx.x) % 7))];
            pad_temp_shared[(((int)threadIdx.x) + 896)] = input0[((((((((int)blockIdx.x) >> 6) * 25088) + (rc_outer_outer * 1568)) + (((((int)threadIdx.x) + 896) / 49) * 49)) + ((((((int)threadIdx.x) / 7) + 2) % 7) * 7)) + (((int)threadIdx.x) % 7))];
            pad_temp_shared[(((int)threadIdx.x) + 952)] = input0[((((((((int)blockIdx.x) >> 6) * 25088) + (rc_outer_outer * 1568)) + (((((int)threadIdx.x) + 952) / 49) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 7) * 7)) + (((int)threadIdx.x) % 7))];
            pad_temp_shared[(((int)threadIdx.x) + 1008)] = input0[((((((((int)blockIdx.x) >> 6) * 25088) + (rc_outer_outer * 1568)) + (((((int)threadIdx.x) + 1008) / 49) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 7) * 7)) + (((int)threadIdx.x) % 7))];
            pad_temp_shared[(((int)threadIdx.x) + 1064)] = input0[((((((((int)blockIdx.x) >> 6) * 25088) + (rc_outer_outer * 1568)) + (((((int)threadIdx.x) + 1064) / 49) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 7) * 7)) + (((int)threadIdx.x) % 7))];
            pad_temp_shared[(((int)threadIdx.x) + 1120)] = input0[((((((((int)blockIdx.x) >> 6) * 25088) + (rc_outer_outer * 1568)) + (((((int)threadIdx.x) + 1120) / 49) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 7) * 7)) + (((int)threadIdx.x) % 7))];
            pad_temp_shared[(((int)threadIdx.x) + 1176)] = input0[(((((((int)blockIdx.x) >> 6) * 25088) + (rc_outer_outer * 1568)) + ((int)threadIdx.x)) + 1176)];
            pad_temp_shared[(((int)threadIdx.x) + 1232)] = input0[((((((((int)blockIdx.x) >> 6) * 25088) + (rc_outer_outer * 1568)) + (((((int)threadIdx.x) + 1232) / 49) * 49)) + ((((((int)threadIdx.x) / 7) + 1) % 7) * 7)) + (((int)threadIdx.x) % 7))];
            pad_temp_shared[(((int)threadIdx.x) + 1288)] = input0[((((((((int)blockIdx.x) >> 6) * 25088) + (rc_outer_outer * 1568)) + (((((int)threadIdx.x) + 1288) / 49) * 49)) + ((((((int)threadIdx.x) / 7) + 2) % 7) * 7)) + (((int)threadIdx.x) % 7))];
            pad_temp_shared[(((int)threadIdx.x) + 1344)] = input0[((((((((int)blockIdx.x) >> 6) * 25088) + (rc_outer_outer * 1568)) + (((((int)threadIdx.x) + 1344) / 49) * 49)) + ((((((int)threadIdx.x) / 7) + 3) % 7) * 7)) + (((int)threadIdx.x) % 7))];
            pad_temp_shared[(((int)threadIdx.x) + 1400)] = input0[((((((((int)blockIdx.x) >> 6) * 25088) + (rc_outer_outer * 1568)) + (((((int)threadIdx.x) + 1400) / 49) * 49)) + ((((((int)threadIdx.x) / 7) + 4) % 7) * 7)) + (((int)threadIdx.x) % 7))];
            pad_temp_shared[(((int)threadIdx.x) + 1456)] = input0[((((((((int)blockIdx.x) >> 6) * 25088) + (rc_outer_outer * 1568)) + (((((int)threadIdx.x) + 1456) / 49) * 49)) + ((((((int)threadIdx.x) / 7) + 5) % 7) * 7)) + (((int)threadIdx.x) % 7))];
            pad_temp_shared[(((int)threadIdx.x) + 1512)] = input0[((((((((int)blockIdx.x) >> 6) * 25088) + (rc_outer_outer * 1568)) + (((((int)threadIdx.x) + 1512) / 49) * 49)) + ((((((int)threadIdx.x) / 7) + 6) % 7) * 7)) + (((int)threadIdx.x) % 7))];
            input1_shared[((int)threadIdx.x)] = input1[(((((((int)blockIdx.x) & 63) * 16384) + ((((int)threadIdx.x) >> 5) * 512)) + (rc_outer_outer * 32)) + (((int)threadIdx.x) & 31))];
            input1_shared[(((int)threadIdx.x) + 56)] = input1[(((((((int)blockIdx.x) & 63) * 16384) + (((((int)threadIdx.x) + 56) >> 5) * 512)) + (rc_outer_outer * 32)) + ((((int)threadIdx.x) + 24) & 31))];
            input1_shared[(((int)threadIdx.x) + 112)] = input1[(((((((int)blockIdx.x) & 63) * 16384) + (((((int)threadIdx.x) + 112) >> 5) * 512)) + (rc_outer_outer * 32)) + ((((int)threadIdx.x) + 16) & 31))];
            input1_shared[(((int)threadIdx.x) + 168)] = input1[(((((((int)blockIdx.x) & 63) * 16384) + (((((int)threadIdx.x) + 168) >> 5) * 512)) + (rc_outer_outer * 32)) + ((((int)threadIdx.x) + 8) & 31))];
            input1_shared[(((int)threadIdx.x) + 224)] = input1[((((((((int)blockIdx.x) & 63) * 16384) + ((((int)threadIdx.x) >> 5) * 512)) + (rc_outer_outer * 32)) + (((int)threadIdx.x) & 31)) + 3584)];
            input1_shared[(((int)threadIdx.x) + 280)] = input1[(((((((int)blockIdx.x) & 63) * 16384) + (((((int)threadIdx.x) + 280) >> 5) * 512)) + (rc_outer_outer * 32)) + ((((int)threadIdx.x) + 24) & 31))];
            input1_shared[(((int)threadIdx.x) + 336)] = input1[(((((((int)blockIdx.x) & 63) * 16384) + (((((int)threadIdx.x) + 336) >> 5) * 512)) + (rc_outer_outer * 32)) + ((((int)threadIdx.x) + 16) & 31))];
            input1_shared[(((int)threadIdx.x) + 392)] = input1[(((((((int)blockIdx.x) & 63) * 16384) + (((((int)threadIdx.x) + 392) >> 5) * 512)) + (rc_outer_outer * 32)) + ((((int)threadIdx.x) + 8) & 31))];
            input1_shared[(((int)threadIdx.x) + 448)] = input1[((((((((int)blockIdx.x) & 63) * 16384) + ((((int)threadIdx.x) >> 5) * 512)) + (rc_outer_outer * 32)) + (((int)threadIdx.x) & 31)) + 7168)];
            input1_shared[(((int)threadIdx.x) + 504)] = input1[(((((((int)blockIdx.x) & 63) * 16384) + (((((int)threadIdx.x) + 504) >> 5) * 512)) + (rc_outer_outer * 32)) + ((((int)threadIdx.x) + 24) & 31))];
            input1_shared[(((int)threadIdx.x) + 560)] = input1[(((((((int)blockIdx.x) & 63) * 16384) + (((((int)threadIdx.x) + 560) >> 5) * 512)) + (rc_outer_outer * 32)) + ((((int)threadIdx.x) + 16) & 31))];
            input1_shared[(((int)threadIdx.x) + 616)] = input1[(((((((int)blockIdx.x) & 63) * 16384) + (((((int)threadIdx.x) + 616) >> 5) * 512)) + (rc_outer_outer * 32)) + ((((int)threadIdx.x) + 8) & 31))];
            input1_shared[(((int)threadIdx.x) + 672)] = input1[((((((((int)blockIdx.x) & 63) * 16384) + ((((int)threadIdx.x) >> 5) * 512)) + (rc_outer_outer * 32)) + (((int)threadIdx.x) & 31)) + 10752)];
            input1_shared[(((int)threadIdx.x) + 728)] = input1[(((((((int)blockIdx.x) & 63) * 16384) + (((((int)threadIdx.x) + 728) >> 5) * 512)) + (rc_outer_outer * 32)) + ((((int)threadIdx.x) + 24) & 31))];
            input1_shared[(((int)threadIdx.x) + 784)] = input1[(((((((int)blockIdx.x) & 63) * 16384) + (((((int)threadIdx.x) + 784) >> 5) * 512)) + (rc_outer_outer * 32)) + ((((int)threadIdx.x) + 16) & 31))];
            input1_shared[(((int)threadIdx.x) + 840)] = input1[(((((((int)blockIdx.x) & 63) * 16384) + (((((int)threadIdx.x) + 840) >> 5) * 512)) + (rc_outer_outer * 32)) + ((((int)threadIdx.x) + 8) & 31))];
            input1_shared[(((int)threadIdx.x) + 896)] = input1[((((((((int)blockIdx.x) & 63) * 16384) + ((((int)threadIdx.x) >> 5) * 512)) + (rc_outer_outer * 32)) + (((int)threadIdx.x) & 31)) + 14336)];
            input1_shared[(((int)threadIdx.x) + 952)] = input1[(((((((int)blockIdx.x) & 63) * 16384) + (((((int)threadIdx.x) + 952) >> 5) * 512)) + (rc_outer_outer * 32)) + ((((int)threadIdx.x) + 24) & 31))];
            if (((int)threadIdx.x) < 16) {
              input1_shared[(((int)threadIdx.x) + 1008)] = input1[((((((((int)blockIdx.x) & 63) * 16384) + (((((int)threadIdx.x) + 1008) >> 5) * 512)) + (rc_outer_outer * 32)) + ((int)threadIdx.x)) + 16)];
            }
            __syncthreads();
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * input1_shared[((((int)threadIdx.x) / 7) * 128)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * input1_shared[((((int)threadIdx.x) / 7) * 128)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * input1_shared[((((int)threadIdx.x) / 7) * 128)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * input1_shared[((((int)threadIdx.x) / 7) * 128)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * input1_shared[((((int)threadIdx.x) / 7) * 128)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * input1_shared[((((int)threadIdx.x) / 7) * 128)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * input1_shared[((((int)threadIdx.x) / 7) * 128)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 32)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 32)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 32)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 32)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 32)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 32)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 32)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 64)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 64)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 64)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 64)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 64)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 64)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 64)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[(((int)threadIdx.x) % 7)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 96)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 7)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 96)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 14)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 96)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 21)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 96)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 28)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 96)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 35)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 96)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 42)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 96)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 1)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 1)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 1)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 1)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 1)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 1)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 1)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 33)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 33)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 33)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 33)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 33)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 33)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 33)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 65)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 65)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 65)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 65)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 65)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 65)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 65)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 49)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 97)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 56)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 97)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 63)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 97)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 70)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 97)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 77)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 97)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 84)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 97)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 91)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 97)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 2)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 2)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 112)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 2)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 119)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 2)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 126)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 2)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 133)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 2)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 140)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 2)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 34)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 34)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 112)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 34)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 119)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 34)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 126)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 34)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 133)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 34)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 140)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 34)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 66)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 66)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 112)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 66)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 119)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 66)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 126)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 66)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 133)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 66)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 140)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 66)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 98)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 98)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 105)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 98)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 112)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 98)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 119)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 98)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 126)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 98)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 133)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 98)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 140)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 98)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 147)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 3)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 154)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 3)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 161)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 3)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 168)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 3)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 175)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 3)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 182)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 3)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 189)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 3)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 147)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 35)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 154)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 35)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 161)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 35)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 168)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 35)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 175)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 35)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 182)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 35)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 189)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 35)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 147)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 67)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 154)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 67)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 161)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 67)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 168)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 67)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 175)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 67)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 182)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 67)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 189)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 67)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 147)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 99)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 154)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 99)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 161)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 99)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 168)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 99)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 175)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 99)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 182)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 99)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 189)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 99)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 196)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 4)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 203)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 4)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 210)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 4)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 217)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 4)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 224)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 4)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 231)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 4)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 238)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 4)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 196)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 36)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 203)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 36)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 210)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 36)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 217)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 36)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 224)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 36)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 231)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 36)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 238)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 36)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 196)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 68)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 203)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 68)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 210)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 68)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 217)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 68)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 224)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 68)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 231)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 68)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 238)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 68)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 196)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 100)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 203)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 100)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 210)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 100)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 217)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 100)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 224)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 100)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 231)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 100)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 238)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 100)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 245)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 5)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 252)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 5)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 259)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 5)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 266)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 5)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 273)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 5)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 280)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 5)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 287)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 5)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 245)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 37)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 252)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 37)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 259)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 37)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 266)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 37)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 273)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 37)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 280)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 37)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 287)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 37)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 245)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 69)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 252)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 69)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 259)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 69)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 266)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 69)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 273)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 69)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 280)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 69)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 287)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 69)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 245)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 101)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 252)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 101)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 259)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 101)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 266)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 101)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 273)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 101)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 280)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 101)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 287)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 101)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 294)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 6)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 301)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 6)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 308)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 6)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 315)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 6)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 322)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 6)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 329)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 6)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 336)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 6)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 294)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 38)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 301)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 38)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 308)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 38)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 315)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 38)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 322)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 38)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 329)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 38)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 336)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 38)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 294)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 70)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 301)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 70)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 308)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 70)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 315)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 70)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 322)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 70)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 329)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 70)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 336)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 70)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 294)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 102)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 301)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 102)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 308)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 102)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 315)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 102)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 322)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 102)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 329)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 102)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 336)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 102)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 343)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 7)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 350)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 7)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 357)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 7)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 364)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 7)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 371)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 7)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 378)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 7)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 385)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 7)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 343)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 39)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 350)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 39)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 357)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 39)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 364)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 39)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 371)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 39)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 378)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 39)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 385)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 39)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 343)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 71)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 350)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 71)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 357)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 71)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 364)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 71)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 371)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 71)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 378)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 71)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 385)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 71)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 343)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 103)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 350)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 103)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 357)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 103)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 364)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 103)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 371)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 103)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 378)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 103)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 385)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 103)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 392)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 8)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 399)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 8)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 406)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 8)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 413)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 8)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 420)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 8)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 427)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 8)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 434)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 8)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 392)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 40)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 399)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 40)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 406)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 40)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 413)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 40)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 420)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 40)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 427)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 40)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 434)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 40)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 392)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 72)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 399)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 72)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 406)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 72)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 413)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 72)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 420)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 72)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 427)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 72)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 434)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 72)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 392)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 104)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 399)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 104)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 406)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 104)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 413)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 104)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 420)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 104)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 427)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 104)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 434)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 104)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 441)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 9)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 448)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 9)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 455)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 9)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 462)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 9)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 469)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 9)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 476)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 9)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 483)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 9)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 441)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 41)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 448)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 41)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 455)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 41)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 462)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 41)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 469)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 41)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 476)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 41)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 483)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 41)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 441)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 73)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 448)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 73)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 455)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 73)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 462)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 73)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 469)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 73)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 476)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 73)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 483)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 73)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 441)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 105)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 448)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 105)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 455)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 105)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 462)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 105)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 469)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 105)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 476)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 105)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 483)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 105)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 490)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 10)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 497)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 10)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 504)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 10)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 511)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 10)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 518)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 10)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 525)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 10)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 532)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 10)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 490)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 42)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 497)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 42)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 504)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 42)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 511)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 42)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 518)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 42)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 525)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 42)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 532)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 42)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 490)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 74)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 497)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 74)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 504)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 74)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 511)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 74)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 518)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 74)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 525)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 74)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 532)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 74)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 490)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 106)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 497)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 106)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 504)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 106)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 511)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 106)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 518)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 106)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 525)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 106)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 532)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 106)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 539)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 11)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 546)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 11)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 553)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 11)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 560)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 11)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 567)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 11)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 574)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 11)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 581)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 11)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 539)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 43)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 546)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 43)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 553)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 43)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 560)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 43)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 567)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 43)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 574)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 43)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 581)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 43)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 539)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 75)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 546)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 75)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 553)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 75)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 560)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 75)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 567)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 75)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 574)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 75)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 581)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 75)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 539)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 107)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 546)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 107)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 553)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 107)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 560)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 107)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 567)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 107)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 574)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 107)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 581)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 107)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 588)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 12)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 595)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 12)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 602)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 12)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 609)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 12)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 616)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 12)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 623)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 12)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 630)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 12)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 588)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 44)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 595)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 44)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 602)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 44)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 609)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 44)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 616)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 44)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 623)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 44)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 630)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 44)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 588)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 76)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 595)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 76)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 602)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 76)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 609)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 76)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 616)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 76)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 623)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 76)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 630)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 76)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 588)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 108)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 595)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 108)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 602)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 108)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 609)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 108)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 616)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 108)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 623)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 108)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 630)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 108)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 637)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 13)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 644)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 13)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 651)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 13)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 658)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 13)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 665)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 13)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 672)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 13)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 679)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 13)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 637)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 45)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 644)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 45)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 651)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 45)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 658)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 45)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 665)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 45)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 672)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 45)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 679)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 45)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 637)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 77)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 644)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 77)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 651)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 77)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 658)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 77)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 665)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 77)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 672)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 77)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 679)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 77)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 637)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 109)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 644)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 109)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 651)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 109)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 658)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 109)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 665)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 109)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 672)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 109)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 679)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 109)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 686)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 14)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 693)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 14)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 700)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 14)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 707)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 14)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 714)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 14)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 721)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 14)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 728)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 14)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 686)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 46)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 693)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 46)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 700)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 46)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 707)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 46)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 714)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 46)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 721)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 46)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 728)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 46)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 686)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 78)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 693)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 78)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 700)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 78)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 707)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 78)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 714)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 78)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 721)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 78)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 728)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 78)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 686)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 110)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 693)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 110)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 700)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 110)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 707)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 110)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 714)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 110)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 721)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 110)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 728)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 110)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 735)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 15)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 742)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 15)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 749)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 15)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 756)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 15)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 763)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 15)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 770)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 15)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 777)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 15)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 735)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 47)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 742)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 47)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 749)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 47)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 756)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 47)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 763)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 47)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 770)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 47)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 777)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 47)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 735)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 79)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 742)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 79)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 749)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 79)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 756)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 79)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 763)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 79)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 770)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 79)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 777)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 79)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 735)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 111)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 742)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 111)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 749)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 111)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 756)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 111)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 763)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 111)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 770)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 111)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 777)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 111)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 784)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 16)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 791)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 16)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 798)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 16)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 805)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 16)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 812)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 16)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 819)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 16)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 826)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 16)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 784)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 48)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 791)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 48)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 798)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 48)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 805)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 48)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 812)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 48)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 819)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 48)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 826)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 48)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 784)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 80)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 791)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 80)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 798)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 80)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 805)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 80)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 812)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 80)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 819)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 80)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 826)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 80)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 784)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 112)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 791)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 112)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 798)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 112)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 805)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 112)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 812)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 112)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 819)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 112)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 826)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 112)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 833)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 17)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 840)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 17)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 847)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 17)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 854)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 17)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 861)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 17)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 868)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 17)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 875)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 17)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 833)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 49)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 840)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 49)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 847)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 49)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 854)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 49)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 861)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 49)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 868)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 49)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 875)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 49)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 833)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 81)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 840)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 81)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 847)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 81)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 854)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 81)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 861)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 81)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 868)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 81)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 875)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 81)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 833)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 113)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 840)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 113)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 847)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 113)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 854)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 113)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 861)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 113)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 868)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 113)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 875)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 113)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 882)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 18)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 889)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 18)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 896)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 18)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 903)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 18)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 910)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 18)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 917)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 18)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 924)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 18)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 882)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 50)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 889)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 50)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 896)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 50)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 903)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 50)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 910)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 50)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 917)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 50)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 924)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 50)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 882)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 82)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 889)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 82)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 896)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 82)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 903)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 82)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 910)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 82)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 917)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 82)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 924)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 82)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 882)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 114)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 889)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 114)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 896)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 114)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 903)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 114)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 910)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 114)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 917)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 114)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 924)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 114)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 931)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 19)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 938)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 19)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 945)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 19)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 952)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 19)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 959)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 19)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 966)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 19)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 973)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 19)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 931)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 51)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 938)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 51)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 945)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 51)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 952)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 51)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 959)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 51)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 966)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 51)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 973)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 51)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 931)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 83)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 938)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 83)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 945)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 83)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 952)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 83)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 959)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 83)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 966)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 83)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 973)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 83)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 931)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 115)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 938)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 115)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 945)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 115)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 952)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 115)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 959)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 115)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 966)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 115)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 973)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 115)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 980)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 20)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 987)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 20)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 994)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 20)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1001)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 20)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1008)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 20)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1015)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 20)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1022)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 20)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 980)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 52)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 987)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 52)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 994)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 52)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1001)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 52)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1008)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 52)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1015)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 52)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1022)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 52)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 980)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 84)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 987)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 84)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 994)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 84)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1001)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 84)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1008)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 84)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1015)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 84)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1022)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 84)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 980)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 116)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 987)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 116)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 994)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 116)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1001)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 116)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1008)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 116)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1015)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 116)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1022)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 116)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1029)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 21)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1036)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 21)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1043)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 21)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1050)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 21)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1057)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 21)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1064)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 21)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1071)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 21)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1029)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 53)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1036)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 53)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1043)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 53)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1050)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 53)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1057)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 53)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1064)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 53)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1071)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 53)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1029)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 85)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1036)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 85)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1043)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 85)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1050)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 85)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1057)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 85)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1064)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 85)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1071)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 85)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1029)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 117)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1036)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 117)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1043)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 117)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1050)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 117)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1057)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 117)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1064)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 117)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1071)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 117)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1078)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 22)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1085)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 22)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1092)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 22)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1099)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 22)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1106)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 22)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1113)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 22)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1120)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 22)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1078)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 54)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1085)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 54)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1092)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 54)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1099)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 54)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1106)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 54)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1113)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 54)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1120)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 54)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1078)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 86)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1085)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 86)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1092)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 86)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1099)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 86)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1106)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 86)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1113)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 86)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1120)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 86)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1078)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 118)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1085)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 118)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1092)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 118)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1099)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 118)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1106)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 118)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1113)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 118)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1120)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 118)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1127)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 23)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1134)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 23)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1141)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 23)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1148)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 23)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1155)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 23)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1162)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 23)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1169)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 23)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1127)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 55)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1134)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 55)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1141)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 55)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1148)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 55)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1155)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 55)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1162)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 55)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1169)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 55)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1127)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 87)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1134)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 87)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1141)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 87)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1148)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 87)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1155)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 87)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1162)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 87)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1169)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 87)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1127)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 119)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1134)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 119)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1141)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 119)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1148)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 119)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1155)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 119)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1162)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 119)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1169)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 119)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1176)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 24)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1183)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 24)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1190)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 24)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1197)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 24)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1204)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 24)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1211)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 24)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1218)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 24)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1176)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 56)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1183)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 56)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1190)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 56)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1197)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 56)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1204)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 56)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1211)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 56)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1218)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 56)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1176)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 88)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1183)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 88)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1190)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 88)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1197)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 88)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1204)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 88)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1211)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 88)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1218)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 88)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1176)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 120)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1183)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 120)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1190)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 120)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1197)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 120)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1204)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 120)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1211)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 120)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1218)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 120)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1225)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 25)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1232)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 25)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1239)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 25)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1246)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 25)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1253)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 25)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1260)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 25)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1267)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 25)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1225)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 57)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1232)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 57)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1239)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 57)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1246)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 57)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1253)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 57)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1260)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 57)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1267)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 57)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1225)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 89)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1232)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 89)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1239)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 89)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1246)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 89)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1253)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 89)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1260)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 89)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1267)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 89)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1225)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 121)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1232)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 121)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1239)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 121)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1246)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 121)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1253)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 121)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1260)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 121)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1267)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 121)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1274)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 26)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1281)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 26)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1288)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 26)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1295)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 26)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1302)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 26)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1309)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 26)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1316)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 26)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1274)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 58)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1281)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 58)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1288)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 58)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1295)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 58)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1302)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 58)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1309)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 58)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1316)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 58)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1274)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 90)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1281)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 90)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1288)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 90)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1295)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 90)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1302)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 90)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1309)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 90)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1316)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 90)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1274)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 122)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1281)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 122)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1288)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 122)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1295)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 122)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1302)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 122)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1309)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 122)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1316)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 122)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1323)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 27)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1330)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 27)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1337)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 27)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1344)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 27)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1351)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 27)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1358)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 27)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1365)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 27)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1323)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 59)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1330)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 59)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1337)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 59)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1344)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 59)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1351)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 59)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1358)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 59)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1365)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 59)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1323)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 91)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1330)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 91)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1337)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 91)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1344)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 91)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1351)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 91)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1358)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 91)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1365)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 91)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1323)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 123)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1330)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 123)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1337)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 123)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1344)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 123)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1351)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 123)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1358)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 123)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1365)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 123)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1372)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 28)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1379)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 28)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1386)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 28)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1393)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 28)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1400)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 28)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1407)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 28)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1414)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 28)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1372)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 60)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1379)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 60)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1386)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 60)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1393)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 60)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1400)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 60)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1407)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 60)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1414)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 60)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1372)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 92)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1379)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 92)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1386)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 92)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1393)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 92)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1400)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 92)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1407)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 92)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1414)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 92)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1372)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 124)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1379)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 124)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1386)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 124)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1393)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 124)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1400)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 124)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1407)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 124)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1414)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 124)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1421)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 29)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1428)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 29)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1435)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 29)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1442)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 29)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1449)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 29)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1456)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 29)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1463)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 29)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1421)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 61)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1428)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 61)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1435)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 61)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1442)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 61)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1449)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 61)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1456)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 61)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1463)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 61)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1421)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 93)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1428)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 93)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1435)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 93)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1442)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 93)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1449)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 93)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1456)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 93)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1463)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 93)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1421)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 125)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1428)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 125)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1435)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 125)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1442)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 125)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1449)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 125)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1456)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 125)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1463)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 125)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1470)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 30)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1477)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 30)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1484)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 30)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1491)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 30)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1498)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 30)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1505)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 30)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1512)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 30)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1470)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 62)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1477)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 62)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1484)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 62)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1491)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 62)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1498)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 62)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1505)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 62)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1512)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 62)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1470)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 94)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1477)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 94)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1484)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 94)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1491)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 94)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1498)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 94)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1505)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 94)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1512)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 94)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1470)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 126)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1477)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 126)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1484)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 126)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1491)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 126)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1498)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 126)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1505)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 126)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1512)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 126)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1519)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 31)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1526)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 31)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1533)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 31)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1540)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 31)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1547)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 31)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1554)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 31)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1561)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 31)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1519)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 63)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1526)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 63)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1533)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 63)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1540)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 63)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1547)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 63)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1554)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 63)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1561)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 63)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1519)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 95)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1526)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 95)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1533)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 95)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1540)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 95)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1547)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 95)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1554)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 95)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1561)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 95)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1519)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 127)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1526)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 127)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1533)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 127)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1540)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 127)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1547)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 127)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1554)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 127)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 7) + 1561)] * input1_shared[(((((int)threadIdx.x) / 7) * 128) + 127)]));
          }
          for (int ax1_inner = 0; ax1_inner < 4; ++ax1_inner) {
            for (int ax2_inner = 0; ax2_inner < 7; ++ax2_inner) {
              T_add[(((((((int)blockIdx.x) * 1568) + ((((int)threadIdx.x) / 7) * 196)) + (ax1_inner * 49)) + (ax2_inner * 7)) + (((int)threadIdx.x) % 7))] = (conv2d_nchw[((ax1_inner * 7) + ax2_inner)] + input2[(((((((int)blockIdx.x) * 1568) + ((((int)threadIdx.x) / 7) * 196)) + (ax1_inner * 49)) + (ax2_inner * 7)) + (((int)threadIdx.x) % 7))]);
            }
          }
        }

    }

}
extern void Matched_Pattern_float_float_float_float_cuda_Matched_Pattern_582_Call(const dim3 &grids, const dim3 &blocks, unsigned mem, cudaStream_t stream, float* input0, float* input1, float* input2, float* output0) {
    Matched_Pattern_float_float_float_float_cuda_Matched_Pattern_582<<<grids, blocks, mem, stream>>>(input0, input1, input2, output0);
}
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

