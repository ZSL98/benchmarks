#include "shared.h"
// Node name:	Matched_Pattern_559
// Description:	Matched_Pattern
// Input:
//	- name: Relu_264_0	type: float	shape: Shape{8, 1024, 14, 14}
//	- name: Constant_502_0	type: float	shape: Shape{512, 1024, 1, 1}
//	- name: Broadcast_503_0	type: float	shape: Shape{8, 512, 14, 14}
// Output:
//	- name: Relu_272_0	type: float	shape: Shape{8, 512, 14, 14}
extern "C" __global__  void Matched_Pattern_float_float_float_float_cuda_Matched_Pattern_559(float* input0, float* input1, float* input2, float* output0)
{
    __shared__ float pad_temp_shared[448];
    __shared__ float input1_shared[1024];
    {
        float* compute = output0;
        {
          float conv2d_nchw[32];
          
          
          conv2d_nchw[0] = 0.000000e+00f;
          conv2d_nchw[1] = 0.000000e+00f;
          conv2d_nchw[2] = 0.000000e+00f;
          conv2d_nchw[3] = 0.000000e+00f;
          conv2d_nchw[4] = 0.000000e+00f;
          conv2d_nchw[5] = 0.000000e+00f;
          conv2d_nchw[6] = 0.000000e+00f;
          conv2d_nchw[7] = 0.000000e+00f;
          conv2d_nchw[8] = 0.000000e+00f;
          conv2d_nchw[9] = 0.000000e+00f;
          conv2d_nchw[10] = 0.000000e+00f;
          conv2d_nchw[11] = 0.000000e+00f;
          conv2d_nchw[12] = 0.000000e+00f;
          conv2d_nchw[13] = 0.000000e+00f;
          conv2d_nchw[14] = 0.000000e+00f;
          conv2d_nchw[15] = 0.000000e+00f;
          conv2d_nchw[16] = 0.000000e+00f;
          conv2d_nchw[17] = 0.000000e+00f;
          conv2d_nchw[18] = 0.000000e+00f;
          conv2d_nchw[19] = 0.000000e+00f;
          conv2d_nchw[20] = 0.000000e+00f;
          conv2d_nchw[21] = 0.000000e+00f;
          conv2d_nchw[22] = 0.000000e+00f;
          conv2d_nchw[23] = 0.000000e+00f;
          conv2d_nchw[24] = 0.000000e+00f;
          conv2d_nchw[25] = 0.000000e+00f;
          conv2d_nchw[26] = 0.000000e+00f;
          conv2d_nchw[27] = 0.000000e+00f;
          conv2d_nchw[28] = 0.000000e+00f;
          conv2d_nchw[29] = 0.000000e+00f;
          conv2d_nchw[30] = 0.000000e+00f;
          conv2d_nchw[31] = 0.000000e+00f;
          for (int rc_outer_outer = 0; rc_outer_outer < 64; ++rc_outer_outer) {
            __syncthreads();
            *(float4*)(pad_temp_shared + (((int)threadIdx.x) * 4)) = *(float4*)(input0 + ((((((((int)blockIdx.x) / 56) * 200704) + (rc_outer_outer * 3136)) + ((((int)threadIdx.x) / 7) * 196)) + ((((int)blockIdx.x) % 7) * 28)) + ((((int)threadIdx.x) % 7) * 4)));
            *(float4*)(pad_temp_shared + ((((int)threadIdx.x) * 4) + 224)) = *(float4*)(input0 + (((((((((int)blockIdx.x) / 56) * 200704) + (rc_outer_outer * 3136)) + ((((int)threadIdx.x) / 7) * 196)) + ((((int)blockIdx.x) % 7) * 28)) + ((((int)threadIdx.x) % 7) * 4)) + 1568));
            input1_shared[((int)threadIdx.x)] = input1[((((((((int)blockIdx.x) % 56) / 7) * 65536) + ((((int)threadIdx.x) >> 4) * 1024)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15))];
            input1_shared[(((int)threadIdx.x) + 56)] = input1[((((((((int)blockIdx.x) % 56) / 7) * 65536) + (((((int)threadIdx.x) + 56) >> 4) * 1024)) + (rc_outer_outer * 16)) + ((((int)threadIdx.x) + 8) & 15))];
            input1_shared[(((int)threadIdx.x) + 112)] = input1[(((((((((int)blockIdx.x) % 56) / 7) * 65536) + ((((int)threadIdx.x) >> 4) * 1024)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 7168)];
            input1_shared[(((int)threadIdx.x) + 168)] = input1[((((((((int)blockIdx.x) % 56) / 7) * 65536) + (((((int)threadIdx.x) + 168) >> 4) * 1024)) + (rc_outer_outer * 16)) + ((((int)threadIdx.x) + 8) & 15))];
            input1_shared[(((int)threadIdx.x) + 224)] = input1[(((((((((int)blockIdx.x) % 56) / 7) * 65536) + ((((int)threadIdx.x) >> 4) * 1024)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 14336)];
            input1_shared[(((int)threadIdx.x) + 280)] = input1[((((((((int)blockIdx.x) % 56) / 7) * 65536) + (((((int)threadIdx.x) + 280) >> 4) * 1024)) + (rc_outer_outer * 16)) + ((((int)threadIdx.x) + 8) & 15))];
            input1_shared[(((int)threadIdx.x) + 336)] = input1[(((((((((int)blockIdx.x) % 56) / 7) * 65536) + ((((int)threadIdx.x) >> 4) * 1024)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 21504)];
            input1_shared[(((int)threadIdx.x) + 392)] = input1[((((((((int)blockIdx.x) % 56) / 7) * 65536) + (((((int)threadIdx.x) + 392) >> 4) * 1024)) + (rc_outer_outer * 16)) + ((((int)threadIdx.x) + 8) & 15))];
            input1_shared[(((int)threadIdx.x) + 448)] = input1[(((((((((int)blockIdx.x) % 56) / 7) * 65536) + ((((int)threadIdx.x) >> 4) * 1024)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 28672)];
            input1_shared[(((int)threadIdx.x) + 504)] = input1[((((((((int)blockIdx.x) % 56) / 7) * 65536) + (((((int)threadIdx.x) + 504) >> 4) * 1024)) + (rc_outer_outer * 16)) + ((((int)threadIdx.x) + 8) & 15))];
            input1_shared[(((int)threadIdx.x) + 560)] = input1[(((((((((int)blockIdx.x) % 56) / 7) * 65536) + ((((int)threadIdx.x) >> 4) * 1024)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 35840)];
            input1_shared[(((int)threadIdx.x) + 616)] = input1[((((((((int)blockIdx.x) % 56) / 7) * 65536) + (((((int)threadIdx.x) + 616) >> 4) * 1024)) + (rc_outer_outer * 16)) + ((((int)threadIdx.x) + 8) & 15))];
            input1_shared[(((int)threadIdx.x) + 672)] = input1[(((((((((int)blockIdx.x) % 56) / 7) * 65536) + ((((int)threadIdx.x) >> 4) * 1024)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 43008)];
            input1_shared[(((int)threadIdx.x) + 728)] = input1[((((((((int)blockIdx.x) % 56) / 7) * 65536) + (((((int)threadIdx.x) + 728) >> 4) * 1024)) + (rc_outer_outer * 16)) + ((((int)threadIdx.x) + 8) & 15))];
            input1_shared[(((int)threadIdx.x) + 784)] = input1[(((((((((int)blockIdx.x) % 56) / 7) * 65536) + ((((int)threadIdx.x) >> 4) * 1024)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 50176)];
            input1_shared[(((int)threadIdx.x) + 840)] = input1[((((((((int)blockIdx.x) % 56) / 7) * 65536) + (((((int)threadIdx.x) + 840) >> 4) * 1024)) + (rc_outer_outer * 16)) + ((((int)threadIdx.x) + 8) & 15))];
            input1_shared[(((int)threadIdx.x) + 896)] = input1[(((((((((int)blockIdx.x) % 56) / 7) * 65536) + ((((int)threadIdx.x) >> 4) * 1024)) + (rc_outer_outer * 16)) + (((int)threadIdx.x) & 15)) + 57344)];
            input1_shared[(((int)threadIdx.x) + 952)] = input1[((((((((int)blockIdx.x) % 56) / 7) * 65536) + (((((int)threadIdx.x) + 952) >> 4) * 1024)) + (rc_outer_outer * 16)) + ((((int)threadIdx.x) + 8) & 15))];
            if (((int)threadIdx.x) < 16) {
              input1_shared[(((int)threadIdx.x) + 1008)] = input1[((((((((int)blockIdx.x) % 56) / 7) * 65536) + (rc_outer_outer * 16)) + ((int)threadIdx.x)) + 64512)];
            }
            __syncthreads();
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[(((int)threadIdx.x) % 14)] * input1_shared[((((int)threadIdx.x) / 14) * 256)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 14)] * input1_shared[((((int)threadIdx.x) / 14) * 256)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[(((int)threadIdx.x) % 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 16)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 16)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[(((int)threadIdx.x) % 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 32)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 32)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[(((int)threadIdx.x) % 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 48)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 48)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[(((int)threadIdx.x) % 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 64)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 64)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[(((int)threadIdx.x) % 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 80)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 80)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[(((int)threadIdx.x) % 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 96)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 96)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[(((int)threadIdx.x) % 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 112)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 112)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 28)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 1)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 42)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 1)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 28)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 17)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 42)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 17)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 28)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 33)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 42)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 33)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 28)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 49)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 42)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 49)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 28)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 65)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 42)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 65)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 28)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 81)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 42)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 81)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 28)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 97)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 42)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 97)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 28)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 113)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 42)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 113)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 56)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 2)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 70)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 2)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 56)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 18)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 70)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 18)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 56)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 34)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 70)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 34)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 56)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 50)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 70)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 50)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 56)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 66)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 70)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 66)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 56)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 82)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 70)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 82)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 56)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 98)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 70)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 98)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 56)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 114)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 70)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 114)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 84)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 3)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 98)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 3)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 84)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 19)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 98)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 19)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 84)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 35)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 98)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 35)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 84)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 51)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 98)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 51)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 84)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 67)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 98)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 67)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 84)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 83)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 98)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 83)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 84)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 99)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 98)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 99)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 84)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 115)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 98)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 115)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 112)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 4)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 126)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 4)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 112)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 20)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 126)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 20)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 112)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 36)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 126)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 36)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 112)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 52)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 126)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 52)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 112)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 68)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 126)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 68)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 112)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 84)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 126)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 84)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 112)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 100)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 126)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 100)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 112)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 116)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 126)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 116)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 140)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 5)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 154)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 5)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 140)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 21)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 154)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 21)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 140)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 37)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 154)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 37)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 140)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 53)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 154)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 53)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 140)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 69)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 154)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 69)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 140)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 85)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 154)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 85)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 140)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 101)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 154)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 101)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 140)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 117)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 154)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 117)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 168)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 6)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 182)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 6)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 168)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 22)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 182)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 22)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 168)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 38)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 182)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 38)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 168)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 54)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 182)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 54)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 168)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 70)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 182)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 70)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 168)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 86)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 182)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 86)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 168)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 102)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 182)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 102)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 168)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 118)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 182)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 118)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 196)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 7)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 210)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 7)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 196)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 23)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 210)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 23)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 196)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 39)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 210)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 39)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 196)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 55)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 210)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 55)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 196)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 71)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 210)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 71)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 196)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 87)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 210)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 87)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 196)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 103)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 210)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 103)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 196)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 119)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 210)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 119)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 224)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 8)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 238)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 8)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 224)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 24)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 238)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 24)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 224)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 40)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 238)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 40)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 224)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 56)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 238)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 56)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 224)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 72)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 238)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 72)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 224)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 88)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 238)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 88)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 224)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 104)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 238)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 104)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 224)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 120)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 238)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 120)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 252)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 9)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 266)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 9)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 252)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 25)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 266)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 25)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 252)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 41)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 266)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 41)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 252)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 57)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 266)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 57)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 252)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 73)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 266)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 73)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 252)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 89)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 266)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 89)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 252)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 105)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 266)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 105)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 252)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 121)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 266)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 121)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 280)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 10)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 294)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 10)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 280)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 26)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 294)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 26)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 280)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 42)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 294)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 42)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 280)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 58)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 294)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 58)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 280)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 74)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 294)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 74)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 280)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 90)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 294)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 90)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 280)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 106)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 294)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 106)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 280)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 122)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 294)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 122)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 308)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 11)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 322)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 11)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 308)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 27)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 322)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 27)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 308)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 43)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 322)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 43)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 308)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 59)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 322)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 59)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 308)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 75)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 322)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 75)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 308)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 91)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 322)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 91)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 308)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 107)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 322)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 107)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 308)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 123)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 322)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 123)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 336)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 12)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 350)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 12)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 336)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 28)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 350)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 28)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 336)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 44)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 350)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 44)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 336)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 60)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 350)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 60)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 336)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 76)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 350)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 76)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 336)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 92)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 350)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 92)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 336)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 108)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 350)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 108)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 336)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 124)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 350)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 124)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 364)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 13)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 378)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 13)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 364)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 29)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 378)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 29)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 364)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 45)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 378)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 45)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 364)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 61)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 378)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 61)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 364)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 77)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 378)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 77)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 364)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 93)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 378)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 93)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 364)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 109)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 378)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 109)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 364)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 125)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 378)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 125)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 392)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 14)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 406)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 14)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 392)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 30)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 406)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 30)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 392)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 46)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 406)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 46)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 392)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 62)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 406)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 62)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 392)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 78)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 406)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 78)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 392)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 94)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 406)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 94)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 392)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 110)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 406)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 110)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 392)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 126)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 406)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 126)]));
            conv2d_nchw[0] = (conv2d_nchw[0] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 420)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 15)]));
            conv2d_nchw[1] = (conv2d_nchw[1] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 434)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 15)]));
            conv2d_nchw[2] = (conv2d_nchw[2] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 420)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 31)]));
            conv2d_nchw[3] = (conv2d_nchw[3] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 434)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 31)]));
            conv2d_nchw[4] = (conv2d_nchw[4] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 420)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 47)]));
            conv2d_nchw[5] = (conv2d_nchw[5] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 434)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 47)]));
            conv2d_nchw[6] = (conv2d_nchw[6] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 420)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 63)]));
            conv2d_nchw[7] = (conv2d_nchw[7] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 434)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 63)]));
            conv2d_nchw[8] = (conv2d_nchw[8] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 420)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 79)]));
            conv2d_nchw[9] = (conv2d_nchw[9] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 434)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 79)]));
            conv2d_nchw[10] = (conv2d_nchw[10] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 420)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 95)]));
            conv2d_nchw[11] = (conv2d_nchw[11] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 434)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 95)]));
            conv2d_nchw[12] = (conv2d_nchw[12] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 420)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 111)]));
            conv2d_nchw[13] = (conv2d_nchw[13] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 434)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 111)]));
            conv2d_nchw[14] = (conv2d_nchw[14] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 420)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 127)]));
            conv2d_nchw[15] = (conv2d_nchw[15] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 434)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 127)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[(((int)threadIdx.x) % 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 128)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 128)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[(((int)threadIdx.x) % 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 144)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 144)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[(((int)threadIdx.x) % 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 160)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 160)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[(((int)threadIdx.x) % 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 176)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 176)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[(((int)threadIdx.x) % 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 192)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 192)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[(((int)threadIdx.x) % 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 208)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 208)]));
            conv2d_nchw[28] = (conv2d_nchw[28] + (pad_temp_shared[(((int)threadIdx.x) % 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 224)]));
            conv2d_nchw[29] = (conv2d_nchw[29] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 224)]));
            conv2d_nchw[30] = (conv2d_nchw[30] + (pad_temp_shared[(((int)threadIdx.x) % 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 240)]));
            conv2d_nchw[31] = (conv2d_nchw[31] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 14)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 240)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 28)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 129)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 42)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 129)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 28)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 145)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 42)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 145)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 28)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 161)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 42)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 161)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 28)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 177)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 42)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 177)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 28)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 193)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 42)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 193)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 28)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 209)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 42)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 209)]));
            conv2d_nchw[28] = (conv2d_nchw[28] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 28)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 225)]));
            conv2d_nchw[29] = (conv2d_nchw[29] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 42)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 225)]));
            conv2d_nchw[30] = (conv2d_nchw[30] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 28)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 241)]));
            conv2d_nchw[31] = (conv2d_nchw[31] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 42)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 241)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 56)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 130)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 70)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 130)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 56)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 146)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 70)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 146)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 56)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 162)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 70)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 162)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 56)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 178)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 70)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 178)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 56)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 194)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 70)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 194)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 56)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 210)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 70)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 210)]));
            conv2d_nchw[28] = (conv2d_nchw[28] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 56)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 226)]));
            conv2d_nchw[29] = (conv2d_nchw[29] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 70)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 226)]));
            conv2d_nchw[30] = (conv2d_nchw[30] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 56)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 242)]));
            conv2d_nchw[31] = (conv2d_nchw[31] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 70)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 242)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 84)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 131)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 98)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 131)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 84)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 147)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 98)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 147)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 84)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 163)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 98)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 163)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 84)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 179)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 98)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 179)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 84)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 195)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 98)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 195)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 84)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 211)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 98)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 211)]));
            conv2d_nchw[28] = (conv2d_nchw[28] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 84)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 227)]));
            conv2d_nchw[29] = (conv2d_nchw[29] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 98)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 227)]));
            conv2d_nchw[30] = (conv2d_nchw[30] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 84)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 243)]));
            conv2d_nchw[31] = (conv2d_nchw[31] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 98)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 243)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 112)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 132)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 126)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 132)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 112)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 148)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 126)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 148)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 112)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 164)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 126)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 164)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 112)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 180)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 126)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 180)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 112)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 196)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 126)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 196)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 112)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 212)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 126)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 212)]));
            conv2d_nchw[28] = (conv2d_nchw[28] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 112)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 228)]));
            conv2d_nchw[29] = (conv2d_nchw[29] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 126)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 228)]));
            conv2d_nchw[30] = (conv2d_nchw[30] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 112)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 244)]));
            conv2d_nchw[31] = (conv2d_nchw[31] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 126)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 244)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 140)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 133)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 154)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 133)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 140)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 149)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 154)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 149)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 140)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 165)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 154)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 165)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 140)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 181)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 154)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 181)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 140)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 197)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 154)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 197)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 140)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 213)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 154)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 213)]));
            conv2d_nchw[28] = (conv2d_nchw[28] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 140)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 229)]));
            conv2d_nchw[29] = (conv2d_nchw[29] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 154)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 229)]));
            conv2d_nchw[30] = (conv2d_nchw[30] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 140)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 245)]));
            conv2d_nchw[31] = (conv2d_nchw[31] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 154)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 245)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 168)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 134)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 182)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 134)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 168)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 150)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 182)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 150)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 168)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 166)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 182)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 166)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 168)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 182)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 182)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 182)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 168)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 198)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 182)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 198)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 168)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 214)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 182)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 214)]));
            conv2d_nchw[28] = (conv2d_nchw[28] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 168)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 230)]));
            conv2d_nchw[29] = (conv2d_nchw[29] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 182)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 230)]));
            conv2d_nchw[30] = (conv2d_nchw[30] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 168)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 246)]));
            conv2d_nchw[31] = (conv2d_nchw[31] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 182)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 246)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 196)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 135)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 210)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 135)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 196)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 151)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 210)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 151)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 196)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 167)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 210)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 167)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 196)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 183)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 210)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 183)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 196)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 199)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 210)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 199)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 196)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 215)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 210)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 215)]));
            conv2d_nchw[28] = (conv2d_nchw[28] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 196)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 231)]));
            conv2d_nchw[29] = (conv2d_nchw[29] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 210)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 231)]));
            conv2d_nchw[30] = (conv2d_nchw[30] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 196)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 247)]));
            conv2d_nchw[31] = (conv2d_nchw[31] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 210)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 247)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 224)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 136)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 238)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 136)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 224)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 152)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 238)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 152)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 224)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 168)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 238)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 168)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 224)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 184)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 238)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 184)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 224)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 200)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 238)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 200)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 224)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 216)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 238)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 216)]));
            conv2d_nchw[28] = (conv2d_nchw[28] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 224)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 232)]));
            conv2d_nchw[29] = (conv2d_nchw[29] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 238)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 232)]));
            conv2d_nchw[30] = (conv2d_nchw[30] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 224)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 248)]));
            conv2d_nchw[31] = (conv2d_nchw[31] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 238)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 248)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 252)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 137)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 266)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 137)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 252)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 153)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 266)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 153)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 252)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 169)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 266)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 169)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 252)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 185)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 266)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 185)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 252)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 201)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 266)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 201)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 252)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 217)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 266)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 217)]));
            conv2d_nchw[28] = (conv2d_nchw[28] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 252)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 233)]));
            conv2d_nchw[29] = (conv2d_nchw[29] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 266)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 233)]));
            conv2d_nchw[30] = (conv2d_nchw[30] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 252)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 249)]));
            conv2d_nchw[31] = (conv2d_nchw[31] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 266)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 249)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 280)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 138)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 294)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 138)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 280)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 154)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 294)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 154)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 280)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 170)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 294)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 170)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 280)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 186)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 294)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 186)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 280)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 202)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 294)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 202)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 280)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 218)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 294)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 218)]));
            conv2d_nchw[28] = (conv2d_nchw[28] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 280)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 234)]));
            conv2d_nchw[29] = (conv2d_nchw[29] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 294)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 234)]));
            conv2d_nchw[30] = (conv2d_nchw[30] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 280)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 250)]));
            conv2d_nchw[31] = (conv2d_nchw[31] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 294)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 250)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 308)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 139)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 322)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 139)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 308)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 155)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 322)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 155)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 308)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 171)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 322)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 171)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 308)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 187)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 322)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 187)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 308)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 203)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 322)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 203)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 308)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 219)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 322)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 219)]));
            conv2d_nchw[28] = (conv2d_nchw[28] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 308)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 235)]));
            conv2d_nchw[29] = (conv2d_nchw[29] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 322)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 235)]));
            conv2d_nchw[30] = (conv2d_nchw[30] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 308)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 251)]));
            conv2d_nchw[31] = (conv2d_nchw[31] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 322)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 251)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 336)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 140)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 350)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 140)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 336)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 156)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 350)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 156)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 336)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 172)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 350)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 172)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 336)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 188)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 350)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 188)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 336)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 204)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 350)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 204)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 336)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 220)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 350)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 220)]));
            conv2d_nchw[28] = (conv2d_nchw[28] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 336)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 236)]));
            conv2d_nchw[29] = (conv2d_nchw[29] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 350)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 236)]));
            conv2d_nchw[30] = (conv2d_nchw[30] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 336)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 252)]));
            conv2d_nchw[31] = (conv2d_nchw[31] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 350)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 252)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 364)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 141)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 378)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 141)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 364)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 157)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 378)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 157)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 364)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 173)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 378)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 173)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 364)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 189)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 378)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 189)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 364)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 205)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 378)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 205)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 364)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 221)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 378)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 221)]));
            conv2d_nchw[28] = (conv2d_nchw[28] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 364)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 237)]));
            conv2d_nchw[29] = (conv2d_nchw[29] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 378)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 237)]));
            conv2d_nchw[30] = (conv2d_nchw[30] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 364)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 253)]));
            conv2d_nchw[31] = (conv2d_nchw[31] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 378)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 253)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 392)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 142)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 406)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 142)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 392)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 158)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 406)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 158)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 392)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 174)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 406)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 174)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 392)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 190)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 406)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 190)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 392)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 206)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 406)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 206)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 392)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 222)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 406)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 222)]));
            conv2d_nchw[28] = (conv2d_nchw[28] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 392)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 238)]));
            conv2d_nchw[29] = (conv2d_nchw[29] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 406)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 238)]));
            conv2d_nchw[30] = (conv2d_nchw[30] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 392)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 254)]));
            conv2d_nchw[31] = (conv2d_nchw[31] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 406)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 254)]));
            conv2d_nchw[16] = (conv2d_nchw[16] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 420)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 143)]));
            conv2d_nchw[17] = (conv2d_nchw[17] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 434)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 143)]));
            conv2d_nchw[18] = (conv2d_nchw[18] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 420)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 159)]));
            conv2d_nchw[19] = (conv2d_nchw[19] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 434)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 159)]));
            conv2d_nchw[20] = (conv2d_nchw[20] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 420)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 175)]));
            conv2d_nchw[21] = (conv2d_nchw[21] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 434)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 175)]));
            conv2d_nchw[22] = (conv2d_nchw[22] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 420)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 191)]));
            conv2d_nchw[23] = (conv2d_nchw[23] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 434)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 191)]));
            conv2d_nchw[24] = (conv2d_nchw[24] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 420)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 207)]));
            conv2d_nchw[25] = (conv2d_nchw[25] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 434)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 207)]));
            conv2d_nchw[26] = (conv2d_nchw[26] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 420)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 223)]));
            conv2d_nchw[27] = (conv2d_nchw[27] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 434)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 223)]));
            conv2d_nchw[28] = (conv2d_nchw[28] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 420)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 239)]));
            conv2d_nchw[29] = (conv2d_nchw[29] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 434)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 239)]));
            conv2d_nchw[30] = (conv2d_nchw[30] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 420)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 255)]));
            conv2d_nchw[31] = (conv2d_nchw[31] + (pad_temp_shared[((((int)threadIdx.x) % 14) + 434)] * input1_shared[(((((int)threadIdx.x) / 14) * 256) + 255)]));
          }
          for (int i1_inner = 0; i1_inner < 16; ++i1_inner) {
            for (int i2_inner = 0; i2_inner < 2; ++i2_inner) {
              compute[(((((((((int)blockIdx.x) / 7) * 12544) + ((((int)threadIdx.x) / 14) * 3136)) + (i1_inner * 196)) + ((((int)blockIdx.x) % 7) * 28)) + (i2_inner * 14)) + (((int)threadIdx.x) % 14))] = max((conv2d_nchw[((i1_inner * 2) + i2_inner)] + input2[(((((((((int)blockIdx.x) / 7) * 12544) + ((((int)threadIdx.x) / 14) * 3136)) + (i1_inner * 196)) + ((((int)blockIdx.x) % 7) * 28)) + (i2_inner * 14)) + (((int)threadIdx.x) % 14))]), 0.000000e+00f);
            }
          }
        }

    }

}
extern void Matched_Pattern_float_float_float_float_cuda_Matched_Pattern_559_Call(const dim3 &grids, const dim3 &blocks, unsigned mem, cudaStream_t stream, float* input0, float* input1, float* input2, float* output0) {
    Matched_Pattern_float_float_float_float_cuda_Matched_Pattern_559<<<grids, blocks, mem, stream>>>(input0, input1, input2, output0);
}
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

